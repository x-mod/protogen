// Code generated by go-bindata.
// sources:
// tpl/grpc/grpc.client.gogo
// tpl/grpc/grpc.server.gogo
// tpl/http/http.client.gogo
// tpl/http/http.server.gogo
// tpl/service/service.gogo
// DO NOT EDIT!

package tpl

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _grpcGrpcClientGogo = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x55\x41\x6b\xdc\x3c\x10\x3d\x5b\xbf\x62\x3e\x91\x7c\x48\xc1\x51\x72\x6b\x59\xf0\xa1\xa4\x50\x52\x42\x1a\xd8\x85\x1e\x42\x28\x5e\x59\x76\xd5\x7a\x25\x21\x69\x1b\x82\xf1\x7f\x2f\x23\x39\xc9\x26\xd9\x35\xb9\x74\x0f\xb6\x25\xcf\xbc\x79\xef\x79\x34\x3b\x0c\x8d\x6a\xb5\x51\x40\x3b\xef\xa4\x90\xbd\x56\x26\x52\x38\x1d\xc7\x61\x38\x85\x23\xbb\xfe\x05\x8b\x0a\x04\x6e\x10\x57\xcb\xdf\x75\xa7\x60\x18\x70\x5f\xdc\xe4\xa5\xb8\xae\x37\x6a\x1c\x09\xd1\x1b\x67\x7d\x04\x46\x00\x00\xa8\xf4\x0f\x2e\xda\xb3\xd8\x07\x4a\x0a\xda\x6e\x22\xde\x42\xf4\xda\x74\x81\x12\x52\xb8\x35\xd0\x09\xe8\x32\x25\xde\xac\xc7\x11\x63\x3a\x6b\xbb\x5e\x89\xce\xf6\xb5\xe9\x84\xf5\xdd\x19\x32\x3b\xfc\xe6\x4c\x7a\xd5\x28\x13\x75\x8d\xa5\x38\x21\x48\xdc\xd7\xa6\x53\x70\x14\x94\xff\xa3\xa5\x42\x09\xa9\xd2\x32\xaf\xc3\x38\x92\x76\x6b\x24\x2a\x99\x42\x26\x15\x5f\xbc\x93\xf8\xc4\x38\x64\xae\x30\x24\x39\x5e\xc5\xad\x37\xd3\x5e\x10\x5f\xad\x36\xec\xf6\x2e\x2f\x87\xc7\xdd\x95\xbd\xb2\xf7\xca\x33\xba\xd7\x20\xca\x4b\xd8\x17\xf9\x92\x00\xe5\x63\x09\xf4\x94\x72\x32\x47\xf1\xc6\xfa\xc8\x38\x68\x13\x5f\xf2\xfb\x70\xfe\xf1\x7c\x36\xf1\x53\xd3\xf8\x03\xda\xda\x4d\x14\x4b\xe7\xb5\x89\x2d\xa3\xc7\x61\x71\xdc\xd0\x72\xce\xa0\x03\x2f\x33\x35\xa4\x4f\xe2\x83\x53\xfb\x83\x2e\x52\x9b\x21\x8d\xad\x8c\x99\x45\xdd\x34\x7e\xe2\x95\xd6\xb1\x0f\x00\x27\xb1\x0f\xe2\xc2\x9a\x56\xe7\x4d\xb7\x16\x6f\xf0\x32\xd6\x7b\xea\x7d\x73\x51\x5b\x03\xe8\x0e\x3b\x99\x89\xe3\x24\x3b\x88\x66\xa9\x10\xd8\x0e\x35\xfe\x0e\xfc\x97\xae\x62\x31\x09\xb3\xe5\x72\x02\xfe\xa4\x48\xb5\xaa\xe4\x46\xda\x1d\x51\x58\x62\xb3\xba\x5a\x66\x27\x18\x5a\xb3\xe3\xcc\x3f\xe7\x84\xf5\x2a\xfc\x20\xaf\x18\x5d\xab\xfb\x19\x08\x66\x5d\x0c\x20\xc4\xdb\x2f\xf6\x9a\x1d\x87\xd9\xcf\x51\x82\xf2\xde\x7a\x3e\x89\x90\x78\x9a\xff\x9f\x89\x7f\xa6\x8e\x2e\x2e\xe6\x0e\x42\x39\x29\xc2\x6b\x6b\x3d\xfc\x28\xc1\xba\x88\x05\xf2\x00\x49\x12\x9e\xf1\xac\x8b\x4c\xf2\x29\x27\xdd\xba\x14\xb1\xa8\xe0\xf6\x2e\xcd\xcf\xcf\xba\xee\xb3\xa8\x21\xa3\xea\x76\x32\xf0\xbf\x0a\x8c\xee\x77\xc0\x72\x6a\x05\xb5\x73\xca\x34\x2c\x2d\x4b\x48\x28\xdf\x75\xfc\xb9\xf2\xb5\x09\x38\x17\x2f\x9e\xc7\x1b\xdb\x19\x75\xe2\x5a\xdd\xaf\xae\x96\x2c\xa1\x73\x3e\xb1\x02\xd5\x07\xf5\xfe\x22\x97\x26\x28\xb9\xf5\x8a\x3d\xe6\xe3\x35\xbb\x6c\x8d\x49\xc6\xa3\xb8\x27\x69\x2c\x37\x68\x99\x71\x85\x10\x9c\x14\xba\x4d\x61\x4f\xfa\x8a\x62\x6a\x33\xa3\xfb\x84\x40\x8a\x6c\x85\x3c\x74\x76\xa1\xc2\x83\xbd\xaf\x9b\xa6\x4e\x42\x32\x7c\xb7\x83\x65\x89\xe8\x64\x4c\xb3\x5e\x99\x66\xc4\x27\x65\x1a\xfc\x9b\xfa\x1b\x00\x00\xff\xff\xc7\x20\xad\xf5\xd2\x06\x00\x00")

func grpcGrpcClientGogoBytes() ([]byte, error) {
	return bindataRead(
		_grpcGrpcClientGogo,
		"grpc/grpc.client.gogo",
	)
}

func grpcGrpcClientGogo() (*asset, error) {
	bytes, err := grpcGrpcClientGogoBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "grpc/grpc.client.gogo", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _grpcGrpcServerGogo = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x95\x5d\x6b\xdb\x3c\x14\xc7\xaf\xad\x4f\x71\x1e\x53\x1e\xe4\x92\x2a\x65\x37\x1b\x01\x5f\x8c\x32\x46\xa1\x64\x65\x29\xbb\x19\x63\x38\xf6\xb1\xe6\xcd\x96\x34\x49\x49\x5b\x8c\xbf\xfb\x38\xb2\xd2\xba\x0b\x4d\xb6\x41\xaf\x6c\x49\x47\xff\xf3\x3b\x6f\x76\xdf\x57\x58\x37\x0a\x21\x95\xd6\x94\xc2\xa1\xdd\xa2\x4d\xe1\x6c\x18\xfa\xfe\x0c\x4e\xf4\xfa\x3b\x2c\x72\x10\xb4\xc1\x4c\x51\xfe\x28\x24\x42\xdf\xd3\xbe\xb8\x1e\x97\x62\x59\x74\x38\x0c\x8c\x35\x9d\xd1\xd6\x03\x67\x49\x5a\x6a\xe5\xf1\xce\xa7\xf4\x6a\xef\x8d\xd7\x73\xdf\x3a\x5a\xd5\x5d\xd8\x54\xe8\x53\xc6\x12\xb3\x86\x34\x8a\x5d\x86\xcb\xd7\xeb\x61\xa0\x73\xd9\xf8\x6f\x9b\xb5\x28\x75\x37\xbf\x3b\xeb\x74\x35\x97\xad\x96\xe1\x40\x6b\xd9\xa2\x90\xba\x2d\x94\x14\xda\xca\x39\x61\x3f\x7f\x32\x2f\x2d\x56\xa8\x7c\x53\x90\xff\x8c\x31\x8a\xca\x16\x4a\x22\x9c\x50\xac\x4d\x89\x14\x5f\x40\x58\x8d\x6b\x37\x0c\xcc\xdf\x9b\x10\x66\x34\x89\x21\xbe\xb7\xa6\x5c\x85\x04\x81\xf3\x76\x53\xfa\x9e\x01\x00\x14\x55\x15\x36\x1a\x25\x59\xe2\x5b\x07\x70\xea\x5b\x27\x2e\xb4\xaa\x1b\xc9\x12\x39\xe6\x14\x4e\x43\x82\xc7\xfb\x2c\xd9\x39\x37\x6b\xb1\xe7\x27\xda\x0c\xec\x28\xc7\x07\xe3\x1b\xad\xa0\xde\xa8\x92\x9f\x1e\xb0\xcb\x18\x23\x1b\x78\x5b\x55\x16\x9d\xe3\x13\xe4\xec\x0f\xf4\x7b\x96\x58\xf4\x1b\x1b\x3d\xb9\x6d\x09\x07\xbd\xd1\x85\xc4\x6d\x4b\x11\xfc\xe4\x21\x43\x2c\x19\x28\xa2\x80\x71\x73\xb5\x1a\xb3\xc3\x29\x5d\x93\x6c\xbd\x28\x0c\xf9\xca\xc1\xb7\x6e\x8a\x12\x8b\xce\x8f\xd7\xe3\x45\xd9\x76\xee\x73\x88\x6f\x53\xc6\x25\xde\x1e\x10\xe1\xda\x78\x07\x42\xec\x73\xff\x8e\x97\x1d\x84\x21\x96\xd8\xaa\x8b\x1c\xfe\x3f\x60\x49\xd0\x54\xd2\x05\xa4\x8b\xd7\xe7\x6f\xce\xd3\x19\xd1\x26\xb5\xb6\xf0\x75\x06\xda\x78\x12\x18\x87\x2c\xb0\x91\xbd\x36\x9e\xbb\xd8\x8b\x64\x2c\xc3\xc9\x22\x87\xcf\x5f\x26\x73\x31\x72\xf6\x03\x4b\x9a\x1a\x46\xf3\x50\xb6\xff\x72\x50\x4d\x1b\x84\xc6\x8b\x39\x14\xc6\xa0\xaa\x78\x58\xce\x20\x68\x5c\x58\xac\x1c\x9f\x4c\xbc\x58\xe2\xed\xcd\xd5\x8a\x3f\x2a\x65\x59\x70\x4f\x63\x1b\x37\x77\xe3\x99\x8f\x1a\x4b\xbc\x8d\x69\x0d\xca\x42\x88\x2c\x09\xe6\xb1\xae\xee\x61\x36\x43\x69\xb8\xb3\xdb\x23\x25\x0e\x4f\x5e\xfa\x3b\x88\x5f\x45\xea\x75\x7a\x66\x80\xd6\x6a\xca\x3b\xe9\x53\xc0\x76\xfb\xd8\x08\x39\x3c\x84\xbc\x6b\xa9\xce\x8b\x77\x74\xa3\xe6\xe9\x9e\x47\x68\x3a\xd3\x62\x47\x81\x6b\x05\x16\x7f\x6e\x1a\x8b\x55\x3a\x26\xdb\xac\xc5\x47\x94\x8d\xf3\x68\x9f\x69\x6e\x8a\x63\x97\x8a\xd9\x14\x24\x0b\x70\xad\x9a\x11\x2c\xd5\x4b\xa1\x17\x57\x24\xa5\x78\xea\x4b\x93\x8e\xd6\xd4\x0e\x59\xa8\x1a\x99\x4d\xca\x15\xd9\xd1\x86\x0f\x00\x4b\xe8\x43\x2e\x3e\xf1\x57\x99\xb8\x54\xb5\x6e\x15\x0f\xff\x9d\x98\x56\xe0\x7b\x78\xd9\x38\x10\x4a\x42\xe1\xe1\xa9\xb3\x5d\x45\x1e\xc9\xc7\x2e\xe2\xad\xca\xfe\xa6\x40\x17\xad\x76\xc8\xc3\x2c\x3e\xd1\xf2\xda\xf0\xec\x5f\x88\x4b\x12\xac\x44\x1a\x28\xe8\x87\x83\xaa\x1a\x06\xd6\xf7\xa8\xaa\xf0\x23\x65\xbf\x02\x00\x00\xff\xff\x5c\x9b\x2d\xd0\x76\x07\x00\x00")

func grpcGrpcServerGogoBytes() ([]byte, error) {
	return bindataRead(
		_grpcGrpcServerGogo,
		"grpc/grpc.server.gogo",
	)
}

func grpcGrpcServerGogo() (*asset, error) {
	bytes, err := grpcGrpcServerGogoBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "grpc/grpc.server.gogo", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _httpHttpClientGogo = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x56\x4d\x8f\xe2\x38\x13\x3e\xc7\xbf\xa2\x5e\x8b\x19\x39\xad\x90\xee\xe3\x88\x57\x1c\x76\x47\xbb\x9a\x19\xf5\x07\x6a\xd8\xd3\x6a\xb5\x82\x60\x68\x6f\x83\x9d\xb6\x1d\xba\x5b\x51\xfe\xfb\xaa\x6c\x07\x4c\x80\xcc\x68\xa5\xb9\x40\xec\x7a\xaa\xea\x71\x55\xb9\xca\x75\xbd\xe4\x2b\x21\x39\xd0\x27\x6b\xcb\xbc\xd8\x08\x2e\x2d\x85\x61\xd3\xd4\xf5\x10\x06\x6a\xf1\x0f\x8c\xc6\x90\xe3\x06\x29\xe7\xc5\xf3\x7c\xcd\xa1\xae\x71\x3f\x9f\xf8\x65\x7e\x3f\xdf\xf2\xa6\x21\x44\x6c\x4b\xa5\x2d\x30\x92\xd0\x42\x49\xcb\xdf\x2c\xc5\x4f\xfd\x5e\x5a\x75\x6d\x37\x06\x57\xab\xad\xdb\x34\x56\x0b\xb9\x36\x94\x90\xa4\x5c\x00\x0d\x06\xbf\x3a\x03\x93\x45\xd3\x20\x66\x2d\xec\x53\xb5\xc8\x0b\xb5\xbd\x7e\x1b\x6e\xd5\xf2\x1a\x09\x06\x7e\xfd\xe2\xeb\xb5\x2e\x0b\x4a\x52\x42\xf0\x0c\x7a\x2e\xd7\x1c\x06\x86\xeb\x9d\x28\x38\x9e\xc6\x39\x9b\xfa\xb5\x69\x1a\x87\x1a\xec\xb8\x36\x42\x49\x94\xd3\xdd\x8d\x8b\x00\xa9\xeb\x56\x59\x95\xd6\x69\x06\x2b\xf9\x43\x69\x85\x92\x26\xa0\x86\x20\x56\xc0\x5f\x3c\xce\xc5\x03\x28\x53\x1e\x92\x07\x95\xd4\x9b\x04\x00\x88\x58\x3d\x67\x30\xd8\x79\xcb\xa8\xfa\x59\x49\x63\xe7\xd2\xe6\x77\xf3\x32\x80\x5b\x85\xe0\xe1\x19\x68\x60\x4a\x3b\x80\xfd\x09\xc6\x30\xd8\xe5\x53\x55\xe9\x82\xef\x5d\x7a\x10\x97\xcb\x88\x44\xbb\x42\xe5\xce\x37\xa6\x73\x55\xc9\x02\x53\xdd\x1e\xd9\xa7\xf9\xcb\x6c\x36\xc1\x2f\x96\x82\x4f\x22\xd4\xce\x9c\xe6\xb6\xd2\x32\xec\x99\xfc\x9b\x12\x92\xfd\xf9\x97\x5f\xd6\xed\xee\x4c\xdd\xaa\x57\xae\x19\x3d\x5b\x41\x34\xcd\xe0\x1c\xf2\x98\x00\x4d\x9b\x0c\xe8\x90\xa6\xa4\xe9\xa1\x38\x51\xda\xb2\x14\x84\xb4\xc7\xfc\x3e\xdd\x7c\xba\xe9\x55\xfc\x65\xb9\xd4\x17\xce\xb6\xda\xda\x7c\x5a\x6a\x21\xed\x8a\xd1\x0f\x66\xf4\x61\x49\xb3\xbe\x00\x5d\x10\x7a\x6a\x48\x9f\xd8\xf7\x92\x9f\x07\x7d\x76\x85\x8c\x34\xaa\x02\x8f\x90\xcc\x97\x4b\x1d\xf2\xe8\xb9\x91\xc4\x14\x4f\x7c\xcb\x8f\xb6\xec\xc6\x40\x02\x00\x57\x76\x63\xb0\x98\x56\x62\x4d\x12\x7f\x29\x1c\xee\xea\x70\x49\x72\xef\xe2\x47\x68\x3c\x94\x16\x30\x62\xec\xaa\x07\x94\x86\x8a\x99\xdd\x4e\xbd\x63\x86\x64\x22\x22\xe9\xf7\x5c\xd4\x24\x69\x23\x8d\xce\x0a\xe8\x75\x87\xf0\xa4\xc8\xd1\xc9\x18\xec\xc6\x90\xa4\x21\x6d\xd5\x4e\x5d\x64\x58\x08\x90\x0f\xce\xcf\x71\x1f\x5c\x8c\xc1\x7f\xc4\x24\x3c\x90\x85\xe8\x9f\x46\xfe\xe7\x10\x0a\xee\xc6\xe0\x3f\x62\x42\xf7\xfc\xb5\xc7\x00\xf6\x2b\x03\x79\x9e\xf7\xb3\x4a\x7b\x59\x20\x89\x02\xdb\xd9\xc7\x1e\x10\x12\xf5\xe1\x1a\xf9\xa9\x43\x33\x20\x89\xab\xf0\x51\xdf\xa5\xcc\xf0\x30\xc9\x4a\x69\xf8\x3b\x83\xd0\x90\x7d\x1b\x75\xd4\xd1\xac\x2a\x2d\x2b\x52\x87\x13\x2b\xf0\xd5\xf1\xbf\x31\x48\xb1\xe9\xe6\xcb\x39\xc6\x91\xd4\x42\xdb\xc0\xc5\xe8\x7d\x30\xa3\xe4\xdd\xf3\x57\x16\x2d\x0f\xe5\xee\xbc\xa5\xde\x79\xc8\x5b\x81\xb1\xdf\x0f\x91\x2d\xb7\x4f\x6a\x79\x34\x46\xee\xdc\x96\x89\xe6\xc2\x00\x6d\x1f\x90\xb4\x54\xc6\x1e\x4f\x8e\x41\xa5\x85\x13\x9d\x1d\x28\x7e\xea\x38\x27\xde\xca\xd1\xa8\x3a\x33\x50\xbc\x42\x77\x68\x21\x8b\x68\x62\xc5\x7a\x27\x93\x2b\x58\x88\x67\xd7\x89\xe2\xe9\x14\xf3\xec\xe8\x05\x5c\x1c\x86\x4b\xf3\x2c\xc6\xc7\x93\xed\xb2\xcf\x4a\x8b\x8b\x0e\x31\xaa\xff\xd5\xd3\x61\x6a\x5e\x42\xc6\x6b\x77\x19\xbf\x7f\x9d\xeb\x36\x81\x5e\xc6\x0a\xfb\x06\xe1\x5d\x85\xb1\xc6\xff\x0c\x84\x84\xab\x72\x91\x1f\xc0\x8f\xfc\xa5\xe2\xc6\xce\xde\x4b\xde\x34\x29\xb0\xae\x14\xeb\xd2\x78\x69\x06\x5c\x6b\xa5\x53\xdf\x68\x5e\xdc\x12\x13\x1a\x55\xf7\xdd\xfc\x99\x07\x8b\x8c\x24\x49\x2c\x71\x06\xdd\x7c\x3e\xa4\xca\xcd\xf0\x63\xdc\x1f\x8f\xb7\xa8\x19\x6f\x85\xee\xdc\x5e\x46\xa7\x11\xcb\xbf\x28\x63\x59\x91\x63\x3f\x48\xb3\x4e\x9c\x43\x2e\x31\x59\xf4\xb4\x3c\x8f\xfc\x7e\x65\xf8\x0c\xc4\x8f\xdf\x95\xde\xce\xad\xe3\x1a\xde\x48\x4d\x43\x33\xb8\xf0\x0a\xf1\x82\xce\xa3\xc3\x6f\x1e\x25\x84\xa6\x27\xec\x86\xc0\x37\xe6\xb4\x74\x3a\xb4\xd0\x52\xa5\x85\x0f\xd6\xf9\x32\x4a\x92\x6e\x1c\x5d\xc6\xa5\xed\xc6\x72\xf2\xeb\xb7\xe9\xc3\x3d\x13\xd2\xe1\xf1\x27\x75\xfd\x0c\x53\x19\x35\xbe\xd0\x8f\xa4\xd8\xb8\x2c\xbb\x1e\xa5\x2a\xd7\x41\x3f\x5e\x2e\x90\xba\xd9\xdb\x1a\x8d\xf7\x2d\x32\xff\xed\x8d\x17\x95\xe5\x58\x90\x19\xb8\xc2\x71\x81\xf6\x54\x1e\xb9\x29\x95\x34\x9c\xa9\xca\xa6\xe9\xff\x7f\x84\x48\xd8\x53\x95\xcd\x50\x40\xf0\x15\xda\xde\x95\xe8\x41\x1a\x6d\x92\x7f\x03\x00\x00\xff\xff\xc0\xcc\x27\x85\xb6\x0c\x00\x00")

func httpHttpClientGogoBytes() ([]byte, error) {
	return bindataRead(
		_httpHttpClientGogo,
		"http/http.client.gogo",
	)
}

func httpHttpClientGogo() (*asset, error) {
	bytes, err := httpHttpClientGogoBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "http/http.client.gogo", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _httpHttpServerGogo = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xbc\x57\x5f\x6f\xdb\x36\x10\x7f\x96\x3e\x05\x47\x18\x03\x59\xc8\x8c\xb1\xa7\x22\x80\x1f\xb6\x02\x45\x03\xac\xad\x91\xa4\xd8\xc3\x30\x0c\x8a\x45\x3b\x5c\x6c\x92\x21\x29\xbb\x81\xa1\xef\x3e\x1c\x49\xd9\x94\xe4\xaa\xce\x06\x34\x4f\x11\xef\xdf\xef\x8e\xc7\xfb\x9d\x0f\x87\x8a\xaf\x84\xe4\x08\x3f\x3a\xa7\x99\xe5\x66\xc7\x0d\x46\xd3\xa6\x39\x1c\xa6\x68\xa2\x1e\xfe\x41\xd7\x73\xc4\xe0\x20\xd7\xe5\xf2\xa9\x5c\x73\x74\x38\xc0\x39\x5b\x84\x4f\xf6\xa9\xdc\xf2\xa6\xc9\x73\xb1\xd5\xca\x38\x44\x72\x84\x10\xc2\x4b\xf3\xa2\x9d\xba\x72\x1b\x8b\xf3\x0c\x4b\xee\xae\x20\x00\xce\xf2\x3c\xd3\x0f\x08\x47\x1f\x37\xde\x66\xf1\xd0\x34\xa0\xb5\x16\xee\xb1\x7e\x60\x4b\xb5\xbd\xfa\x3a\xdd\xaa\xca\x9b\x44\x48\xe3\xe2\xab\xb5\xd1\x4b\x1c\x22\x8f\xa9\x19\x2e\x2b\x70\x46\xf3\x1c\xf2\x33\xa5\x5c\x73\x34\x01\xa1\x58\x72\xc8\xd4\xa3\xba\x0b\xdf\xb6\x69\xbc\xd6\x64\xc7\x8d\x15\x4a\x82\x1c\xef\x66\xbe\x3a\xf9\xe1\xd0\x1a\x2b\xed\xbc\x65\xf4\xc2\x3e\x6b\x27\x94\xb4\x51\x6b\x8a\xc4\x0a\xf1\xe7\xa0\xe7\x6b\x85\x30\x51\x41\x85\x45\x13\x1a\x5c\x02\xfa\x04\xd5\x53\x81\x26\xbb\xe0\x19\x4c\xdf\x29\x69\x5d\x29\x1d\xfb\x58\xea\xa8\xdc\x1a\xc4\x08\x4f\x08\x47\xa4\xb8\xa7\x70\xcc\x60\x8e\x26\x3b\x76\xa7\x6a\xb3\xe4\xc7\x90\x41\x89\xcb\x2a\x01\xd1\x7e\x81\x71\xef\x7f\xb8\x6a\xf7\xa2\x7d\x1b\xb4\x29\x87\x16\xf8\x70\x7f\xbf\xb8\xf3\x75\x46\xd6\x99\x7a\xe9\x0e\xde\xdb\x9b\x53\xfd\x59\x10\xfb\xe3\xb2\xaa\x8c\x8f\x6d\x9d\x11\x72\xed\xcf\xb4\x90\xeb\x2f\xb7\x37\x9d\x33\xb7\xb1\x01\xe3\x1b\xb7\xb1\x50\x85\x95\x58\xc3\xa7\x17\xb6\x37\xa7\x1f\xd8\x00\x4e\x8c\x75\x01\xdc\x70\x63\x68\x55\xcb\x25\x79\x33\xa2\x47\xf3\x1c\x74\xd0\xaf\x55\x65\xb8\xb5\xc4\xa7\x10\xa0\xd2\x0b\xfc\x87\x72\x18\xee\x6a\x13\x83\x59\xb3\x43\xa3\x01\xa3\x8d\x4f\xd5\xec\x98\x0f\x38\xf7\xa5\xf3\xe7\x0d\x64\xe7\x21\x2d\x84\x5c\x93\xda\x88\x1f\x0a\xa7\xbd\xae\x39\xaa\x8d\xe8\x01\xba\xff\xfd\x2e\xdc\x15\x81\x0b\x4c\xee\xee\xc7\x40\x83\xa0\x73\xe8\x9d\x1e\xac\xf8\xb4\xc9\xf7\x1b\xe7\x32\x9c\xd9\x6b\x41\x66\x19\xc0\x6b\xc3\xcf\xdb\x0e\xce\xb3\x13\xc6\x4f\x7c\x3f\xe2\x04\x86\x87\x45\x8c\x0d\x71\xf7\xe1\xd1\x51\x30\xb1\x60\xe1\x61\xc2\x98\xf9\x79\x44\x19\x70\x43\xd7\x5d\x23\x7c\xfd\x76\xf6\x76\x86\x0b\x00\x9c\xad\x94\x41\x7f\x17\x28\x4e\xc0\x30\xb7\x3c\x3c\xd0\x57\xda\x11\x1b\xdf\x0d\x28\x3f\x7a\xc9\xf5\x1c\xfd\xf9\xd7\x60\x22\x7c\xd6\xee\x74\x7f\x89\x14\x70\x10\x4f\x4d\x2d\x50\x32\x40\x49\x31\x2d\xce\xd9\xb6\xaf\x34\x7e\x02\xfc\xa8\x18\xa6\x9c\x58\x45\x9f\xbe\x59\x7e\x9a\x23\x29\x36\x49\x17\x05\xb8\x73\x54\x6a\xcd\x65\x45\xfc\x67\x91\xfa\x3f\x75\xf8\xc9\x0d\xa5\x49\x80\x4e\x86\x68\xde\xc9\x8b\xef\x83\x47\xc6\x18\xcd\xe2\xd0\x8d\x73\x7f\xcb\xdd\xa3\xaa\x3a\x94\xf2\xd1\x1f\xd9\xfe\x54\x07\x87\x27\x6d\xac\x95\x75\xb8\x37\xd6\xa7\x68\x02\x53\x01\xc4\x43\x51\x0c\x18\xd8\xc8\x07\x0c\xde\x3a\x14\x86\x92\xbf\x84\x6c\x82\x51\x9f\xd0\x00\x11\xc5\x03\xbb\x6f\x32\x5b\xf4\x92\x72\xdb\x59\xe3\x21\xd3\x05\xa4\x78\x44\x37\x2d\xcf\xb7\x78\xaf\x6f\x93\xb2\xe0\x78\xfc\xda\x88\xd1\xe0\x50\xf5\xff\x1b\xf5\xc4\xb8\xdf\xb3\x38\x77\xd6\x69\x3f\x76\xab\x6a\xc7\x49\xc7\x51\xd2\x8f\xa1\xc1\x08\xac\x65\xa7\xaa\x35\x4d\xfa\xb2\x42\x98\x58\x00\xc8\x0e\x0f\xef\x39\xf1\xb8\x28\x9d\xe3\x46\x12\x58\xcc\xd8\x97\xdb\x9b\xf7\xca\x6c\x4b\xe7\x23\xc4\x65\xa4\x69\x70\x71\x5c\x04\xbb\xcb\x64\x14\x74\xdf\x79\x3c\x8c\x2d\x1a\xcf\xe8\x00\xe1\x14\xf1\x8d\x1d\xd6\xfb\x0c\x34\xf0\x56\x1b\x71\x2e\xcd\x73\x75\x4f\x3c\x7c\x28\x65\xb5\xe1\x86\xf8\x9d\x39\x7e\xbc\xf7\x0c\x10\xe4\x7d\x98\x29\x4a\x7a\x5a\xb1\x9a\xe3\x20\xda\x70\xd9\xda\x46\x52\xa5\x30\x91\x66\x29\xab\xbd\xe2\x3a\xdb\x0c\x7b\x2e\x8b\xff\x9a\x0f\x38\x18\xe6\xd0\xc4\x25\x2c\x52\xa0\x3d\xee\x5b\x97\x8d\x32\xcf\x75\x97\x70\x66\xaf\x98\x64\x6f\x3c\x76\x76\xcb\xad\x56\xd2\xf2\x3f\x8c\x70\xdc\x14\xc8\xf0\xe7\xb0\x6c\xb2\x5b\xfe\x5c\x73\xeb\x3c\xdf\x0a\x3f\xd9\x24\xdf\x93\xc0\xf5\xd1\x57\x54\xb9\x7f\xd1\x70\x3f\x79\xc6\x8d\x27\x41\xdf\xae\x8b\xdf\xa2\x94\x18\xfe\x5c\x20\x21\x69\x9e\x41\xe3\x1b\x73\xa2\x89\x2c\x3b\xaa\x06\x14\x64\x6f\x0a\x90\x15\xa0\x47\xf3\x2c\x6e\x06\x9e\xfa\x54\xed\xfc\x31\x44\x48\xe8\x7f\xd0\x27\x10\x0f\x86\xa1\xe3\x5f\x1d\xa1\x31\xf2\xb9\x38\xad\x43\x9a\xc3\x5e\xde\xbe\xfc\x8b\x4b\x0a\xf7\xf9\xca\x32\x86\x5f\x4e\xec\x1e\x90\x61\xad\xe4\x1a\x53\xd6\x81\x14\x15\xee\x5c\xe9\x6a\xfb\x4e\x55\x9c\xfc\x32\x9b\x51\x1a\xfa\xa1\x7d\x4f\x09\xd6\x7f\x03\x00\x00\xff\xff\x28\xb2\x3d\xbb\x7a\x0e\x00\x00")

func httpHttpServerGogoBytes() ([]byte, error) {
	return bindataRead(
		_httpHttpServerGogo,
		"http/http.server.gogo",
	)
}

func httpHttpServerGogo() (*asset, error) {
	bytes, err := httpHttpServerGogoBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "http/http.server.gogo", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _serviceServiceGogo = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\x50\x41\x4e\xc3\x30\x10\x3c\x77\x5f\xb1\xb2\x7a\x48\xaa\x36\x0f\x40\xe2\x84\x38\x70\x00\x55\xc0\x07\x12\x67\x53\x02\xb5\xe3\xda\x9b\xaa\x95\xb5\x7f\x47\x76\x8c\x10\x95\xb8\x24\xda\x99\xd9\x99\x1d\xc7\xd8\xd3\x30\x5a\x42\x15\xc8\x9f\x47\x4d\x0a\x77\x22\x31\xee\x70\x3d\x75\x9f\x78\x77\x8f\x4d\x02\xc0\xb5\xfa\xab\x3d\x10\xc6\x98\xf0\x66\xbf\x8c\xcd\x4b\x6b\x48\x04\x60\x34\x6e\xf2\x8c\x15\x20\x22\x2a\x3d\x59\xa6\x0b\x2b\x58\xa9\xc1\xb0\xca\x60\xfe\xb8\x0e\x55\x71\x78\xca\x1b\xfb\x4e\x44\x41\x0d\x90\x12\x7d\x6b\x0f\x84\xeb\x72\x48\xca\xce\xca\xb7\x65\x0e\x22\xc0\x57\x97\x4f\x28\x92\x12\x5f\x04\x18\xd8\xcf\x9a\x23\x48\xb2\x2b\x66\x86\xf8\x63\xea\xb3\xd7\xcf\xd2\x73\x86\x42\xae\x35\xcc\x56\x63\x15\xce\x1a\x37\xff\xd9\xd6\x29\x70\xb1\x29\x44\xa5\xf9\x82\xa5\x63\xf3\xb0\xfc\xb7\xe8\xe9\x84\x1b\xd7\x35\xbf\xea\x57\x3a\xcd\x14\xf8\xfd\xea\x48\xa4\xc6\xea\x96\xe5\xd9\xdb\xb0\xb0\x5b\x24\xef\x27\x5f\x63\x84\x95\xcf\x04\xda\xf1\xb8\xc5\xc1\x70\xf3\x98\x98\xa1\x52\xb7\x67\xe0\x6c\x47\xe3\x8e\x64\xc8\x32\xf5\xaa\x06\x81\x18\xc9\xf6\xb9\x58\x7e\x50\xb2\xbd\xfc\x01\xbf\x03\x00\x00\xff\xff\xa2\x65\xd4\x99\xee\x01\x00\x00")

func serviceServiceGogoBytes() ([]byte, error) {
	return bindataRead(
		_serviceServiceGogo,
		"service/service.gogo",
	)
}

func serviceServiceGogo() (*asset, error) {
	bytes, err := serviceServiceGogoBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "service/service.gogo", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"grpc/grpc.client.gogo": grpcGrpcClientGogo,
	"grpc/grpc.server.gogo": grpcGrpcServerGogo,
	"http/http.client.gogo": httpHttpClientGogo,
	"http/http.server.gogo": httpHttpServerGogo,
	"service/service.gogo": serviceServiceGogo,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"grpc": &bintree{nil, map[string]*bintree{
		"grpc.client.gogo": &bintree{grpcGrpcClientGogo, map[string]*bintree{}},
		"grpc.server.gogo": &bintree{grpcGrpcServerGogo, map[string]*bintree{}},
	}},
	"http": &bintree{nil, map[string]*bintree{
		"http.client.gogo": &bintree{httpHttpClientGogo, map[string]*bintree{}},
		"http.server.gogo": &bintree{httpHttpServerGogo, map[string]*bintree{}},
	}},
	"service": &bintree{nil, map[string]*bintree{
		"service.gogo": &bintree{serviceServiceGogo, map[string]*bintree{}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

