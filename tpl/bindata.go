// Code generated by go-bindata.
// sources:
// tpl/grpc/grpc.client.gogo
// tpl/grpc/grpc.server.gogo
// tpl/http/http.client.gogo
// tpl/http/http.server.gogo
// tpl/service/service.gogo
// DO NOT EDIT!

package tpl

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _grpcGrpcClientGogo = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x55\x41\x6b\xdc\x3c\x10\x3d\x5b\xbf\x62\x3e\x91\x7c\x48\xc1\x51\x72\x6b\x59\xf0\xa1\xa4\x50\x52\x42\x1a\xd8\x85\x1e\x42\x28\x5e\x59\x76\xd5\x7a\x25\x21\x69\x1b\x82\xf1\x7f\x2f\x23\x39\xc9\x26\xd9\x35\xb9\x74\x0f\xb6\x25\xcf\xbc\x79\xef\x79\x34\x3b\x0c\x8d\x6a\xb5\x51\x40\x3b\xef\xa4\x90\xbd\x56\x26\x52\x38\x1d\xc7\x61\x38\x85\x23\xbb\xfe\x05\x8b\x0a\x04\x6e\x10\x57\xcb\xdf\x75\xa7\x60\x18\x70\x5f\xdc\xe4\xa5\xb8\xae\x37\x6a\x1c\x09\xd1\x1b\x67\x7d\x04\x46\x00\x00\xa8\xf4\x0f\x2e\xda\xb3\xd8\x07\x4a\x0a\xda\x6e\x22\xde\x42\xf4\xda\x74\x81\x12\x52\xb8\x35\xd0\x09\xe8\x32\x25\xde\xac\xc7\x11\x63\x3a\x6b\xbb\x5e\x89\xce\xf6\xb5\xe9\x84\xf5\xdd\x19\x32\x3b\xfc\xe6\x4c\x7a\xd5\x28\x13\x75\x8d\xa5\x38\x21\x48\xdc\xd7\xa6\x53\x70\x14\x94\xff\xa3\xa5\x42\x09\xa9\xd2\x32\xaf\xc3\x38\x92\x76\x6b\x24\x2a\x99\x42\x26\x15\x5f\xbc\x93\xf8\xc4\x38\x64\xae\x30\x24\x39\x5e\xc5\xad\x37\xd3\x5e\x10\x5f\xad\x36\xec\xf6\x2e\x2f\x87\xc7\xdd\x95\xbd\xb2\xf7\xca\x33\xba\xd7\x20\xca\x4b\xd8\x17\xf9\x92\x00\xe5\x63\x09\xf4\x94\x72\x32\x47\xf1\xc6\xfa\xc8\x38\x68\x13\x5f\xf2\xfb\x70\xfe\xf1\x7c\x36\xf1\x53\xd3\xf8\x03\xda\xda\x4d\x14\x4b\xe7\xb5\x89\x2d\xa3\xc7\x61\x71\xdc\xd0\x72\xce\xa0\x03\x2f\x33\x35\xa4\x4f\xe2\x83\x53\xfb\x83\x2e\x52\x9b\x21\x8d\xad\x8c\x99\x45\xdd\x34\x7e\xe2\x95\xd6\xb1\x0f\x00\x27\xb1\x0f\xe2\xc2\x9a\x56\xe7\x4d\xb7\x16\x6f\xf0\x32\xd6\x7b\xea\x7d\x73\x51\x5b\x03\xe8\x0e\x3b\x99\x89\xe3\x24\x3b\x88\x66\xa9\x10\xd8\x0e\x35\xfe\x0e\xfc\x97\xae\x62\x31\x09\xb3\xe5\x72\x02\xfe\xa4\x48\xb5\xaa\xe4\x46\xda\x1d\x51\x58\x62\xb3\xba\x5a\x66\x27\x18\x5a\xb3\xe3\xcc\x3f\xe7\x84\xf5\x2a\xfc\x20\xaf\x18\x5d\xab\xfb\x19\x08\x66\x5d\x0c\x20\xc4\xdb\x2f\xf6\x9a\x1d\x87\xd9\xcf\x51\x82\xf2\xde\x7a\x3e\x89\x90\x78\x9a\xff\x9f\x89\x7f\xa6\x8e\x2e\x2e\xe6\x0e\x42\x39\x29\xc2\x6b\x6b\x3d\xfc\x28\xc1\xba\x88\x05\xf2\x00\x49\x12\x9e\xf1\xac\x8b\x4c\xf2\x29\x27\xdd\xba\x14\xb1\xa8\xe0\xf6\x2e\xcd\xcf\xcf\xba\xee\xb3\xa8\x21\xa3\xea\x76\x32\xf0\xbf\x0a\x8c\xee\x77\xc0\x72\x6a\x05\xb5\x73\xca\x34\x2c\x2d\x4b\x48\x28\xdf\x75\xfc\xb9\xf2\xb5\x09\x38\x17\x2f\x9e\xc7\x1b\xdb\x19\x75\xe2\x5a\xdd\xaf\xae\x96\x2c\xa1\x73\x3e\xb1\x02\xd5\x07\xf5\xfe\x22\x97\x26\x28\xb9\xf5\x8a\x3d\xe6\xe3\x35\xbb\x6c\x8d\x49\xc6\xa3\xb8\x27\x69\x2c\x37\x68\x99\x71\x85\x10\x9c\x14\xba\x4d\x61\x4f\xfa\x8a\x62\x6a\x33\xa3\xfb\x84\x40\x8a\x6c\x85\x3c\x74\x76\xa1\xc2\x83\xbd\xaf\x9b\xa6\x4e\x42\x32\x7c\xb7\x83\x65\x89\xe8\x64\x4c\xb3\x5e\x99\x66\xc4\x27\x65\x1a\xfc\x9b\xfa\x1b\x00\x00\xff\xff\xc7\x20\xad\xf5\xd2\x06\x00\x00")

func grpcGrpcClientGogoBytes() ([]byte, error) {
	return bindataRead(
		_grpcGrpcClientGogo,
		"grpc/grpc.client.gogo",
	)
}

func grpcGrpcClientGogo() (*asset, error) {
	bytes, err := grpcGrpcClientGogoBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "grpc/grpc.client.gogo", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _grpcGrpcServerGogo = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x95\x51\x6b\xe4\x36\x10\xc7\x9f\xad\x4f\x31\x35\xa1\xc8\x61\xa3\x0d\x7d\x69\x59\xf0\x43\x09\xa5\x04\xc2\x36\x74\x43\x5f\x4a\x29\x5e\x7b\xac\xf3\x9d\x2d\xe9\x24\xed\x26\xc1\xf8\xbb\x1f\x33\xf6\x26\xce\x2d\xd9\xdc\x1d\xe4\xc9\x96\x34\x9a\xf9\xcd\x7f\x66\xec\xbe\xaf\xb0\x6e\x0c\x42\xaa\xbd\x2b\x55\x40\xbf\x47\x9f\xc2\xc5\x30\xf4\xfd\x05\x9c\xd9\xed\x47\x58\xe5\xa0\x68\x43\xb8\xa2\xfc\x54\x68\x84\xbe\xa7\x7d\x75\x3b\x2e\xd5\xba\xe8\x70\x18\x84\x68\x3a\x67\x7d\x04\x29\x92\xb4\xb4\x26\xe2\x43\x4c\xe9\xd5\x3f\xba\x68\x97\xb1\x0d\xb4\xaa\x3b\xde\x34\x18\x53\x21\x12\xb7\x85\x74\x72\x76\xcd\x97\x6f\xb7\xc3\x40\xe7\xba\x89\x1f\x76\x5b\x55\xda\x6e\xf9\x70\xd1\xd9\x6a\xa9\x5b\xab\xf9\xc0\x5a\xdd\xa2\xd2\xb6\x2d\x8c\x56\xd6\xeb\x25\x61\xbf\x7e\xb2\x2c\x3d\x56\x68\x62\x53\x50\xfc\x4c\x08\xca\xca\x17\x46\x23\x9c\x51\xae\x4d\x89\x94\x1f\x23\x6c\xc6\x75\x18\x06\x11\x1f\x1d\xa7\x39\x99\x4c\x29\xfe\xe9\x5d\xb9\x61\x81\x20\x44\xbf\x2b\x63\x2f\x00\x00\x8a\xaa\xe2\x8d\xc6\x68\x91\xc4\x36\x00\x9c\xc7\x36\xa8\x2b\x6b\xea\x46\x8b\x44\x8f\x9a\xc2\x39\x0b\x3c\xde\x17\xc9\x21\xb8\xdb\xaa\xa3\x38\x93\xcd\x20\xde\xe4\xf8\xcb\xc5\xc6\x1a\xa8\x77\xa6\x94\xe7\x27\xec\x32\x21\xc8\x06\x7e\xaf\x2a\x8f\x21\xc8\x19\x72\xf6\x0d\xfe\x7b\x91\x78\x8c\x3b\x3f\x45\x0a\xfb\x12\x4e\x46\xa3\x0b\x49\xd8\x97\x8a\xe3\xe4\xac\x90\x48\x06\xca\x88\x31\xee\x6e\x36\xa3\x3a\x92\xe4\x9a\xa9\xf5\xae\x30\x14\x2b\x87\xd8\x86\x39\xca\x54\x74\xf9\x76\x3d\xde\x95\xed\x10\x3e\x87\xe9\x6d\xce\xb8\xc6\xfb\x13\x4e\xa4\x75\x31\x80\x52\xc7\xdc\x5f\xe3\x65\x27\x61\x88\x65\x6a\xd5\x55\x0e\x3f\x9f\xb0\x24\x68\x2a\xe9\x0a\xd2\xd5\xaf\x97\xbf\x5d\xa6\x0b\xa2\x4d\x6a\xeb\xe1\xff\x05\x58\x17\xc9\xc1\x38\x64\xcc\x46\xf6\xd6\x45\x19\xa6\x5e\x24\x63\xcd\x27\xab\x1c\xfe\xfd\x6f\x36\x17\x23\x67\x3f\x88\xa4\xa9\x61\x34\xe7\xb2\xfd\x94\x83\x69\x5a\x76\x34\x5e\xcc\xa1\x70\x0e\x4d\x25\x79\xb9\x00\xf6\x71\xe5\xb1\x0a\x72\x36\xf1\x6a\x8d\xf7\x77\x37\x1b\xf9\xec\x29\xcb\x38\x3c\x8d\xed\xb4\x79\x18\xcf\x7c\xf4\xb1\xc6\xfb\x49\x56\xf6\xac\x94\xca\x12\x36\x9f\xea\x1a\x9e\x66\x93\x4b\x23\x83\xdf\xbf\x51\x62\x7e\xca\x32\x3e\xc0\xf4\x55\xa4\x5e\xa7\x67\x06\xe8\xbd\x25\xdd\xc9\x3f\x25\xec\xf7\xcf\x8d\x90\xc3\x53\xca\x87\x96\xea\xa2\xfa\x83\x6e\xd4\x32\x3d\x8a\x08\x4d\xe7\x5a\xec\x28\x71\x6b\xc0\xe3\xe7\x5d\xe3\xb1\x4a\x47\xb1\xdd\x56\xfd\x8d\xba\x09\x11\xfd\x2b\xcd\x4d\x79\x1c\xa4\x58\xcc\x41\x32\x86\x6b\xcd\x82\x60\xa9\x5e\x06\xa3\xba\x21\x57\x46\xa6\xb1\x74\xe9\x68\x4d\xed\x90\x71\xd5\xc8\x6c\x56\xae\x89\x1d\x3d\x7f\x00\x44\x42\x1f\x72\xf5\x8f\xfc\x25\x53\xd7\xa6\xb6\xad\x91\xfc\xdf\x99\x64\x05\x79\x84\x97\x8d\x03\x61\x34\x14\x11\x5e\x06\x3b\x54\xe4\x99\x7c\xec\x22\xd9\x9a\xec\xbb\x0a\x14\xad\x93\x3c\x8a\x2f\x5c\xf1\xee\x0f\x01\x47\xeb\x1c\x6b\x3f\x8c\xff\x1b\x34\xd5\x30\x88\xbe\x47\x53\xf1\x7f\x54\x7c\x09\x00\x00\xff\xff\x7a\x33\x51\x73\x75\x07\x00\x00")

func grpcGrpcServerGogoBytes() ([]byte, error) {
	return bindataRead(
		_grpcGrpcServerGogo,
		"grpc/grpc.server.gogo",
	)
}

func grpcGrpcServerGogo() (*asset, error) {
	bytes, err := grpcGrpcServerGogoBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "grpc/grpc.server.gogo", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _httpHttpClientGogo = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x56\x4d\x8f\xe2\x38\x13\x3e\xc7\xbf\xa2\x5e\x8b\x19\x39\xad\x90\xee\xe3\x88\x57\x1c\x76\x47\xbb\x9a\x19\xf5\x07\x6a\xd8\xd3\x6a\xb5\x82\x60\x68\x6f\x83\x9d\xb6\x1d\xba\x5b\x51\xfe\xfb\xaa\x6c\x07\x4c\x80\xcc\x68\xa5\xb9\x40\xec\x7a\xaa\xea\x71\x55\xb9\xca\x75\xbd\xe4\x2b\x21\x39\xd0\x27\x6b\xcb\xbc\xd8\x08\x2e\x2d\x85\x61\xd3\xd4\xf5\x10\x06\x6a\xf1\x0f\x8c\xc6\x90\xe3\x06\x29\xe7\xc5\xf3\x7c\xcd\xa1\xae\x71\x3f\x9f\xf8\x65\x7e\x3f\xdf\xf2\xa6\x21\x44\x6c\x4b\xa5\x2d\x30\x92\xd0\x42\x49\xcb\xdf\x2c\xc5\x4f\xfd\x5e\x5a\x75\x6d\x37\x06\x57\xab\xad\xdb\x34\x56\x0b\xb9\x36\x94\x90\xa4\x5c\x00\x0d\x06\xbf\x3a\x03\x93\x45\xd3\x20\x66\x2d\xec\x53\xb5\xc8\x0b\xb5\xbd\x7e\x1b\x6e\xd5\xf2\x1a\x09\x06\x7e\xfd\xe2\xeb\xb5\x2e\x0b\x4a\x52\x42\xf0\x0c\x7a\x2e\xd7\x1c\x06\x86\xeb\x9d\x28\x38\x9e\xc6\x39\x9b\xfa\xb5\x69\x1a\x87\x1a\xec\xb8\x36\x42\x49\x94\xd3\xdd\x8d\x8b\x00\xa9\xeb\x56\x59\x95\xd6\x69\x06\x2b\xf9\x43\x69\x85\x92\x26\xa0\x86\x20\x56\xc0\x5f\x3c\xce\xc5\x03\x28\x53\x1e\x92\x07\x95\xd4\x9b\x04\x00\x88\x58\x3d\x67\x30\xd8\x79\xcb\xa8\xfa\x59\x49\x63\xe7\xd2\xe6\x77\xf3\x32\x80\x5b\x85\xe0\xe1\x19\x68\x60\x4a\x3b\x80\xfd\x09\xc6\x30\xd8\xe5\x53\x55\xe9\x82\xef\x5d\x7a\x10\x97\xcb\x88\x44\xbb\x42\xe5\xce\x37\xa6\x73\x55\xc9\x02\x53\xdd\x1e\xd9\xa7\xf9\xcb\x6c\x36\xc1\x2f\x96\x82\x4f\x22\xd4\xce\x9c\xe6\xb6\xd2\x32\xec\x99\xfc\x9b\x12\x92\xfd\xf9\x97\x5f\xd6\xed\xee\x4c\xdd\xaa\x57\xae\x19\x3d\x5b\x41\x34\xcd\xe0\x1c\xf2\x98\x00\x4d\x9b\x0c\xe8\x90\xa6\xa4\xe9\xa1\x38\x51\xda\xb2\x14\x84\xb4\xc7\xfc\x3e\xdd\x7c\xba\xe9\x55\xfc\x65\xb9\xd4\x17\xce\xb6\xda\xda\x7c\x5a\x6a\x21\xed\x8a\xd1\x0f\x66\xf4\x61\x49\xb3\xbe\x00\x5d\x10\x7a\x6a\x48\x9f\xd8\xf7\x92\x9f\x07\x7d\x76\x85\x8c\x34\xaa\x02\x8f\x90\xcc\x97\x4b\x1d\xf2\xe8\xb9\x91\xc4\x14\x4f\x7c\xcb\x8f\xb6\xec\xc6\x40\x02\x00\x57\x76\x63\xb0\x98\x56\x62\x4d\x12\x7f\x29\x1c\xee\xea\x70\x49\x72\xef\xe2\x47\x68\x3c\x94\x16\x30\x62\xec\xaa\x07\x94\x86\x8a\x99\xdd\x4e\xbd\x63\x86\x64\x22\x22\xe9\xf7\x5c\xd4\x24\x69\x23\x8d\xce\x0a\xe8\x75\x87\xf0\xa4\xc8\xd1\xc9\x18\xec\xc6\x90\xa4\x21\x6d\xd5\x4e\x5d\x64\x58\x08\x90\x0f\xce\xcf\x71\x1f\x5c\x8c\xc1\x7f\xc4\x24\x3c\x90\x85\xe8\x9f\x46\xfe\xe7\x10\x0a\xee\xc6\xe0\x3f\x62\x42\xf7\xfc\xb5\xc7\x00\xf6\x2b\x03\x79\x9e\xf7\xb3\x4a\x7b\x59\x20\x89\x02\xdb\xd9\xc7\x1e\x10\x12\xf5\xe1\x1a\xf9\xa9\x43\x33\x20\x89\xab\xf0\x51\xdf\xa5\xcc\xf0\x30\xc9\x4a\x69\xf8\x3b\x83\xd0\x90\x7d\x1b\x75\xd4\xd1\xac\x2a\x2d\x2b\x52\x87\x13\x2b\xf0\xd5\xf1\xbf\x31\x48\xb1\xe9\xe6\xcb\x39\xc6\x91\xd4\x42\xdb\xc0\xc5\xe8\x7d\x30\xa3\xe4\xdd\xf3\x57\x16\x2d\x0f\xe5\xee\xbc\xa5\xde\x79\xc8\x5b\x81\xb1\xdf\x0f\x91\x2d\xb7\x4f\x6a\x79\x34\x46\xee\xdc\x96\x89\xe6\xc2\x00\x6d\x1f\x90\xb4\x54\xc6\x1e\x4f\x8e\x41\xa5\x85\x13\x9d\x1d\x28\x7e\xea\x38\x27\xde\xca\xd1\xa8\x3a\x33\x50\xbc\x42\x77\x68\x21\x8b\x68\x62\xc5\x7a\x27\x93\x2b\x58\x88\x67\xd7\x89\xe2\xe9\x14\xf3\xec\xe8\x05\x5c\x1c\x86\x4b\xf3\x2c\xc6\xc7\x93\xed\xb2\xcf\x4a\x8b\x8b\x0e\x31\xaa\xff\xd5\xd3\x61\x6a\x5e\x42\xc6\x6b\x77\x19\xbf\x7f\x9d\xeb\x36\x81\x5e\xc6\x0a\xfb\x06\xe1\x5d\x85\xb1\xc6\xff\x0c\x84\x84\xab\x72\x91\x1f\xc0\x8f\xfc\xa5\xe2\xc6\xce\xde\x4b\xde\x34\x29\xb0\xae\x14\xeb\xd2\x78\x69\x06\x5c\x6b\xa5\x53\xdf\x68\x5e\xdc\x12\x13\x1a\x55\xf7\xdd\xfc\x99\x07\x8b\x8c\x24\x49\x2c\x71\x06\xdd\x7c\x3e\xa4\xca\xcd\xf0\x63\xdc\x1f\x8f\xb7\xa8\x19\x6f\x85\xee\xdc\x5e\x46\xa7\x11\xcb\xbf\x28\x63\x59\x91\x63\x3f\x48\xb3\x4e\x9c\x43\x2e\x31\x59\xf4\xb4\x3c\x8f\xfc\x7e\x65\xf8\x0c\xc4\x8f\xdf\x95\xde\xce\xad\xe3\x1a\xde\x48\x4d\x43\x33\xb8\xf0\x0a\xf1\x82\xce\xa3\xc3\x6f\x1e\x25\x84\xa6\x27\xec\x86\xc0\x37\xe6\xb4\x74\x3a\xb4\xd0\x52\xa5\x85\x0f\xd6\xf9\x32\x4a\x92\x6e\x1c\x5d\xc6\xa5\xed\xc6\x72\xf2\xeb\xb7\xe9\xc3\x3d\x13\xd2\xe1\xf1\x27\x75\xfd\x0c\x53\x19\x35\xbe\xd0\x8f\xa4\xd8\xb8\x2c\xbb\x1e\xa5\x2a\xd7\x41\x3f\x5e\x2e\x90\xba\xd9\xdb\x1a\x8d\xf7\x2d\x32\xff\xed\x8d\x17\x95\xe5\x58\x90\x19\xb8\xc2\x71\x81\xf6\x54\x1e\xb9\x29\x95\x34\x9c\xa9\xca\xa6\xe9\xff\x7f\x84\x48\xd8\x53\x95\xcd\x50\x40\xf0\x15\xda\xde\x95\xe8\x41\x1a\x6d\x92\x7f\x03\x00\x00\xff\xff\xc0\xcc\x27\x85\xb6\x0c\x00\x00")

func httpHttpClientGogoBytes() ([]byte, error) {
	return bindataRead(
		_httpHttpClientGogo,
		"http/http.client.gogo",
	)
}

func httpHttpClientGogo() (*asset, error) {
	bytes, err := httpHttpClientGogoBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "http/http.client.gogo", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _httpHttpServerGogo = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xbc\x56\x5f\x8b\xe3\x36\x10\x7f\xb6\x3f\xc5\x54\x84\x22\x2f\x8e\x76\x1f\x8f\x05\x3f\xb4\x07\xc7\x1d\xf4\xee\xc2\xee\x96\x3e\x94\x52\x9c\x58\x49\xdc\x4d\x2c\xaf\x24\x27\xbb\x04\x7f\xf7\x32\xd2\x38\x56\xec\x5c\x2e\x47\xa1\x79\x71\x24\xcd\xcc\xef\x37\x7f\x34\xa3\xc3\xa1\x90\xcb\xb2\x92\xc0\xd6\xd6\xd6\xc2\x48\xbd\x93\x9a\xc1\xb4\x6d\x0f\x87\x29\x4c\xd4\xfc\x1f\xb8\xcf\x40\xe0\x46\x5c\xe7\x8b\xe7\x7c\x25\xe1\x70\xc0\x7d\x31\xf3\x4b\xf1\x25\xdf\xca\xb6\x8d\xe3\x72\x5b\x2b\x6d\x81\xc7\x00\x00\x6c\xa1\x2a\x2b\x5f\x2d\xa3\x95\x7e\xab\xad\xba\xb5\x1b\xc3\xe2\x88\x55\xd2\xde\x22\x1c\x8b\xe2\x38\xaa\xe7\xc0\xc8\xe2\x27\x67\x61\x36\x6f\x5b\x94\x5a\x95\x76\xdd\xcc\xc5\x42\x6d\x6f\x5f\xa7\x5b\x55\x38\x15\x22\x78\xf9\xf8\x76\xa5\xeb\x05\x8b\x93\x38\x46\x27\x74\x5e\xad\x24\x4c\xf0\xa8\x5c\x48\x74\xc7\x81\x3d\xfa\xb5\x69\x5b\x27\x35\xd9\x49\x6d\x4a\x55\xe1\x39\xdb\xdd\xb9\x10\xc4\x87\x43\xa7\xac\x6a\xeb\x34\xc9\x8a\xf8\x5a\xdb\x52\x55\x86\xa4\xa6\x50\x2e\x41\xbe\x78\x39\x17\x10\x60\x5c\x79\x11\x41\x2a\x89\x37\x89\xe1\x08\x58\x3d\xa7\x30\xd9\x79\xcb\xa8\xfa\x5e\x55\xc6\xe6\x95\x15\x9f\xf3\x9a\x84\x3b\x05\x42\x78\x06\x46\x4c\xd9\x40\xe0\xe8\x41\x06\x93\x9d\x78\x54\x8d\x5e\xc8\x23\xa4\x17\x92\x55\x11\x90\xe8\x56\xa8\x3c\xf8\x8f\xf9\xb4\x6f\xb5\xcb\x75\xe7\xb2\xcf\xf3\xc7\xa7\xa7\xd9\xa3\x8b\x32\x18\xab\x9b\x85\x3d\x38\x6b\x79\x51\x68\xfc\x1a\xab\xcb\x6a\xe5\xb6\xec\xc6\x38\xd8\x1b\xbb\x31\xe8\xd8\xb2\xf4\xfb\x6b\x9f\x24\x80\x9b\x3e\x63\xc2\x9b\x8c\xa3\x2e\x4b\xf5\x5c\x8c\xa0\x49\xe6\x0a\x6a\x3e\x3b\xb0\x6c\xaa\x05\xbf\xb9\x20\x97\xc4\x31\xca\xc0\x2f\x45\xa1\xa5\x31\xdc\x79\xe1\x5d\x48\xae\xb0\xef\x5d\xd7\xd2\x36\x9a\xc0\x8c\xde\xc1\x45\x40\xd2\x71\xa1\xd2\x3b\xe1\x00\x33\x17\x3d\xb7\xdf\xa2\x77\x8e\xd2\xd3\x6f\x8f\x3e\x66\x1c\xe3\x18\xc4\xf0\xff\x21\x86\xa0\x19\xa6\x70\x40\x8b\x6e\x0d\xff\x7e\x9e\xae\xe3\x19\xfd\x28\xc9\x28\x42\x7a\x1d\x7c\x06\xf4\x2f\x8e\x7a\x8e\x5f\xe4\xfe\x82\x11\xbc\x97\x06\x84\x18\xf3\x1e\xd2\x4b\x2e\x92\xa1\x80\x51\x31\xdf\x67\xf0\xf3\x05\x61\xe4\x8d\x49\xbe\x07\x76\xff\xee\xee\xdd\x1d\x4b\x91\x70\xb4\x54\x1a\xfe\x4e\x81\x9a\x8b\x6f\x09\x8e\x1e\xca\xab\xda\x72\x43\x65\x8a\xc2\x6b\x77\x72\x9f\xc1\x9f\x7f\x8d\x2e\xce\xd7\xda\xf6\xf9\x0b\x4e\x91\x07\x67\x23\x62\x2c\x49\xcf\x49\x77\xd7\x80\x96\x48\x98\x04\x7d\xcb\x28\x97\xe4\xae\x2b\x8f\x9f\x32\xa8\xca\x4d\x50\x37\x9e\x60\x06\x79\x5d\xcb\xaa\xe0\x6e\x99\x86\xf6\xfb\x9a\xee\xcd\x24\x49\x00\x40\xdb\x5d\x87\xc8\x4e\x5c\x91\x7b\x6f\x52\x08\x91\x44\x61\x81\x9b\x63\x5f\x70\xe9\xbf\xa2\x8c\xdc\x97\x2f\xec\x2b\xd0\x98\xc2\xbb\x85\xdf\x04\xa4\xd6\xaa\xcb\xed\xb1\xfd\x6f\xa5\x5d\xab\xe2\x64\x00\x7c\x76\x5b\x66\xd8\x83\x91\x70\x2f\xcd\x6a\x65\x2c\x1b\x34\xe1\x29\x4c\x1a\x5d\xba\xe3\xf1\x11\x01\xfa\xd9\xe1\x00\xbd\xb5\x93\x81\x03\xc1\x2f\x18\x0d\x5e\x69\x38\x7e\x90\x51\xc2\x46\x7a\xdf\x9c\x43\x64\x25\x9c\x44\x67\x95\xc7\x73\xc9\x33\x65\x17\x64\xc3\xf0\x7c\x6b\x4a\x0d\x75\xc2\x99\x75\x19\xbf\xd1\xe5\x45\x70\x8c\xfa\x7f\x45\xed\xe7\xe3\xf7\x34\xce\xed\x61\xeb\xa2\xe2\x16\x0f\xaa\xb1\x92\x9f\x98\x09\xaa\xdd\x97\x97\xbb\xba\x7d\xcc\x4e\x2f\xae\x07\x21\xf7\xd1\x37\x36\xce\x72\x60\x71\x96\x5b\x2b\x75\xc5\xf1\x6d\x24\x7e\x7f\xf8\xf4\x41\xe9\x6d\x6e\x1d\x02\x3d\x1c\xda\x96\xa5\xc7\xb7\xd8\xe9\xeb\x8e\x0e\x06\x5d\xc4\x6f\x52\x81\x76\x9d\x65\xc4\x70\x0a\x72\x63\xc6\xd1\x3e\x43\x0d\xad\x35\xba\x3c\xe7\xe6\xb9\xa8\x07\x16\x3e\xe6\x55\xb1\x91\x9a\xbb\x47\x2c\x2d\x3e\xd0\x48\x11\x43\x8e\x21\xc5\xa4\x7f\x0b\x91\xf5\xae\xa9\x04\xa9\x3a\xb6\x8b\xe4\x87\x9a\x8c\x55\x35\xef\xe6\x6a\x68\xee\xfd\x46\x19\xc9\x9d\xad\xeb\x3a\xcc\xb5\x88\x43\x47\xf9\x5e\xbb\x20\x89\x07\x69\x6a\x55\x19\xf9\x87\x2e\xad\xd4\x29\x68\xf9\xe2\x5f\x5f\xe2\x41\xbe\x34\xd2\x58\x37\x59\x4b\xd7\x70\x2a\xb9\xe7\x7e\xaa\x93\x2d\x12\x79\x7a\xab\x31\x76\x71\x24\xb5\x1b\x77\xae\x8e\x66\xbf\xd2\x29\xd7\xf2\x25\x85\xb2\x4a\xe2\x08\x2b\x52\xeb\x7e\x3c\x44\xd1\x51\xd4\xb3\xe0\x7b\x9d\xe2\x59\x8a\x72\x49\x1c\xd1\x1b\xc0\x0d\x39\xd5\x58\xb7\x8d\x08\xc1\xa0\x1f\xe5\x10\xf1\xba\xa6\xcd\x13\x42\x3e\x87\xd3\x19\xc4\x70\xf7\x4f\xde\xe0\x9d\x1b\x6c\xfe\x1b\x00\x00\xff\xff\xb6\xe8\x6c\x6a\x0d\x0d\x00\x00")

func httpHttpServerGogoBytes() ([]byte, error) {
	return bindataRead(
		_httpHttpServerGogo,
		"http/http.server.gogo",
	)
}

func httpHttpServerGogo() (*asset, error) {
	bytes, err := httpHttpServerGogoBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "http/http.server.gogo", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _serviceServiceGogo = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\x50\x41\x4e\xc3\x30\x10\x3c\x77\x5f\xb1\xb2\x7a\x48\xaa\x36\x0f\x40\xe2\x84\x38\x70\x00\x55\xc0\x07\x12\x67\x53\x02\xb5\xe3\xda\x9b\xaa\x95\xb5\x7f\x47\x76\x8c\x10\x95\xb8\x24\xda\x99\xd9\x99\x1d\xc7\xd8\xd3\x30\x5a\x42\x15\xc8\x9f\x47\x4d\x0a\x77\x22\x31\xee\x70\x3d\x75\x9f\x78\x77\x8f\x4d\x02\xc0\xb5\xfa\xab\x3d\x10\xc6\x98\xf0\x66\xbf\x8c\xcd\x4b\x6b\x48\x04\x60\x34\x6e\xf2\x8c\x15\x20\x22\x2a\x3d\x59\xa6\x0b\x2b\x58\xa9\xc1\xb0\xca\x60\xfe\xb8\x0e\x55\x71\x78\xca\x1b\xfb\x4e\x44\x41\x0d\x90\x12\x7d\x6b\x0f\x84\xeb\x72\x48\xca\xce\xca\xb7\x65\x0e\x22\xc0\x57\x97\x4f\x28\x92\x12\x5f\x04\x18\xd8\xcf\x9a\x23\x48\xb2\x2b\x66\x86\xf8\x63\xea\xb3\xd7\xcf\xd2\x73\x86\x42\xae\x35\xcc\x56\x63\x15\xce\x1a\x37\xff\xd9\xd6\x29\x70\xb1\x29\x44\xa5\xf9\x82\xa5\x63\xf3\xb0\xfc\xb7\xe8\xe9\x84\x1b\xd7\x35\xbf\xea\x57\x3a\xcd\x14\xf8\xfd\xea\x48\xa4\xc6\xea\x96\xe5\xd9\xdb\xb0\xb0\x5b\x24\xef\x27\x5f\x63\x84\x95\xcf\x04\xda\xf1\xb8\xc5\xc1\x70\xf3\x98\x98\xa1\x52\xb7\x67\xe0\x6c\x47\xe3\x8e\x64\xc8\x32\xf5\xaa\x06\x81\x18\xc9\xf6\xb9\x58\x7e\x50\xb2\xbd\xfc\x01\xbf\x03\x00\x00\xff\xff\xa2\x65\xd4\x99\xee\x01\x00\x00")

func serviceServiceGogoBytes() ([]byte, error) {
	return bindataRead(
		_serviceServiceGogo,
		"service/service.gogo",
	)
}

func serviceServiceGogo() (*asset, error) {
	bytes, err := serviceServiceGogoBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "service/service.gogo", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"grpc/grpc.client.gogo": grpcGrpcClientGogo,
	"grpc/grpc.server.gogo": grpcGrpcServerGogo,
	"http/http.client.gogo": httpHttpClientGogo,
	"http/http.server.gogo": httpHttpServerGogo,
	"service/service.gogo": serviceServiceGogo,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"grpc": &bintree{nil, map[string]*bintree{
		"grpc.client.gogo": &bintree{grpcGrpcClientGogo, map[string]*bintree{}},
		"grpc.server.gogo": &bintree{grpcGrpcServerGogo, map[string]*bintree{}},
	}},
	"http": &bintree{nil, map[string]*bintree{
		"http.client.gogo": &bintree{httpHttpClientGogo, map[string]*bintree{}},
		"http.server.gogo": &bintree{httpHttpServerGogo, map[string]*bintree{}},
	}},
	"service": &bintree{nil, map[string]*bintree{
		"service.gogo": &bintree{serviceServiceGogo, map[string]*bintree{}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

