// Code generated by go-bindata.
// sources:
// tpl/grpc/grpc.client.gogo
// tpl/grpc/grpc.server.gogo
// tpl/http/http.client.gogo
// tpl/http/http.server.gogo
// tpl/service/service.gogo
// DO NOT EDIT!

package tpl

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _grpcGrpcClientGogo = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x55\x41\x6b\xdc\x3c\x10\x3d\x5b\xbf\x62\x3e\x91\x7c\x48\xc1\x51\x72\x0c\x0b\x3e\x94\x14\x4a\x4a\x48\x03\xbb\xd0\x43\x08\xc5\x2b\xcb\xae\x5a\xaf\x24\x24\x6d\x43\x30\xfe\xef\x65\x24\x27\xd9\x24\xbb\x26\x97\xee\xc1\xb6\xe4\x99\x37\xef\x3d\x8f\x66\x87\xa1\x51\xad\x36\x0a\x68\xe7\x9d\x14\xb2\xd7\xca\x44\x0a\xa7\xe3\x38\x0c\xa7\x70\x64\xd7\xbf\x60\x51\x81\xc0\x0d\xe2\x6a\xf9\xbb\xee\x14\x0c\x03\xee\x8b\xdb\xbc\x14\x37\xf5\x46\x8d\x23\x21\x7a\xe3\xac\x8f\xc0\x08\x00\x00\x95\xfe\xd1\x45\x7b\x16\xfb\x40\x49\x41\xdb\x4d\xc4\x5b\x88\x5e\x9b\x2e\x50\x42\x0a\xb7\x06\x3a\x01\x5d\xa5\xc4\xdb\xf5\x38\x62\x4c\x67\x6d\xd7\x2b\xd1\xd9\xbe\x36\x9d\xb0\xbe\x3b\x43\x66\x87\xdf\x9c\x49\xaf\x1a\x65\xa2\xae\xb1\x14\x27\x04\x89\xfb\xda\x74\x0a\x8e\x82\xf2\x7f\xb4\x54\x28\x21\x55\x5a\xe6\x75\x18\x47\xd2\x6e\x8d\x44\x25\x53\xc8\xa4\xe2\x8b\x77\x12\x9f\x18\x87\xcc\x15\x86\x24\xc7\xab\xb8\xf5\x66\xda\x0b\xe2\xab\xd5\x86\xdd\xdd\xe7\xe5\xf0\xb4\xbb\xb2\xd7\xf6\x41\x79\x46\xf7\x1a\x44\x79\x09\xfb\x22\x5f\x13\xa0\x7c\x2c\x81\x9e\x52\x4e\xe6\x28\xde\x5a\x1f\x19\x07\x6d\xe2\x6b\x7e\x17\xe7\x17\xe7\xb3\x89\x9f\x9a\xc6\x1f\xd0\xd6\x6e\xa2\x58\x3a\xaf\x4d\x6c\x19\x3d\x0e\x8b\xe3\x86\x96\x73\x06\x1d\x78\x99\xa9\x21\x7d\x12\x1f\x9d\xda\x1f\x74\x99\xda\x0c\x69\x6c\x65\xcc\x2c\xea\xa6\xf1\x13\xaf\xb4\x8e\x7d\x00\x38\x89\x7d\x10\x97\xd6\xb4\x3a\x6f\xba\xb5\x78\x87\x97\xb1\x3e\x52\xef\x9b\x8b\xda\x1a\x40\x77\xd8\xc9\x4c\x1c\x27\xd9\x41\x34\x4b\x85\xc0\x76\xa8\xf1\x0f\xe0\xbf\x76\x15\x8b\x49\x98\x2d\x97\x13\xf0\x27\x45\xaa\x55\x25\x37\xd2\xee\x88\xc2\x12\x9b\xd5\xf5\x32\x3b\xc1\xd0\x9a\x1d\x67\xfe\x39\x27\xac\x57\xe1\x07\x79\xc3\xe8\x46\x3d\xcc\x40\x30\xeb\x62\x00\x21\xde\x7f\xb1\xb7\xec\x38\xcc\x7e\x8e\x12\x94\xf7\xd6\xf3\x49\x84\xc4\xd3\xfc\xff\x4c\xfc\x0b\x75\x74\x71\x31\x77\x10\xca\x49\x11\x5e\x5b\xeb\xe1\x47\x09\xd6\x45\x2c\x90\x07\x48\x92\xf0\x82\x67\x5d\x64\x92\x4f\x39\xe9\xd6\xa5\x88\x45\x05\x77\xf7\x69\x7e\x7e\xd6\x75\x9f\x45\x0d\x19\x55\xb7\x93\x81\xff\x55\x60\x74\xbf\x03\x96\x53\x2b\xa8\x9d\x53\xa6\x61\x69\x59\x42\x42\xf9\xae\xe3\xcf\x95\xaf\x4d\xc0\xb9\x78\xf9\x32\xde\xd8\xce\xa8\x13\x37\xea\x61\x75\xbd\x64\x09\x9d\xf3\x89\x15\xa8\x3e\xa8\x8f\x17\xb9\x32\x41\xc9\xad\x57\xec\x29\x1f\xaf\xd9\x65\x6b\x4c\x32\x1e\xc5\x3d\x4b\x63\xb9\x41\xcb\x8c\x2b\x84\xe0\xa4\xd0\x6d\x0a\x7b\xd6\x57\x14\x53\x9b\x19\xdd\x27\x04\x52\x64\x2b\xe4\xa1\xb3\x0b\x15\x1e\xec\x7d\xdd\x34\x75\x12\x92\xe1\xbb\x1d\x2c\x4b\x44\x27\x63\x9a\xf5\xca\x34\x23\x3e\x29\xd3\xe0\xdf\xd4\xdf\x00\x00\x00\xff\xff\xbb\xbc\x66\x86\xd2\x06\x00\x00")

func grpcGrpcClientGogoBytes() ([]byte, error) {
	return bindataRead(
		_grpcGrpcClientGogo,
		"grpc/grpc.client.gogo",
	)
}

func grpcGrpcClientGogo() (*asset, error) {
	bytes, err := grpcGrpcClientGogoBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "grpc/grpc.client.gogo", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _grpcGrpcServerGogo = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x95\x5d\x6b\xdb\x3c\x14\xc7\xaf\xad\x4f\x71\x1e\x53\x1e\xe4\x92\x2a\x65\x57\x25\xe0\x8b\x51\xc6\x28\x94\xac\x2c\x65\x37\x63\x0c\xc7\x3e\xd6\xbc\xd9\x92\x26\x29\x69\x8b\xf1\x77\x1f\x47\x56\x5a\x77\xa1\xc9\x36\xe8\x95\x2d\xe9\xe8\x7f\x7e\xe7\xcd\xee\xfb\x0a\xeb\x46\x21\xa4\xd2\x9a\x52\x38\xb4\x5b\xb4\x29\x9c\x0d\x43\xdf\x9f\xc1\x89\x5e\x7f\x87\x45\x0e\x82\x36\x98\x29\xca\x1f\x85\x44\xe8\x7b\xda\x17\x37\xe3\x52\x2c\x8b\x0e\x87\x81\xb1\xa6\x33\xda\x7a\xe0\x2c\x49\x4b\xad\x3c\xde\xfb\x94\x5e\xed\x83\xf1\x7a\xee\x5b\x47\xab\xba\x0b\x9b\x0a\x7d\xca\x58\x62\xd6\x90\x46\xb1\xab\x70\xf9\x66\x3d\x0c\x74\x2e\x1b\xff\x6d\xb3\x16\xa5\xee\xe6\xf7\x67\x9d\xae\xe6\xb2\xd5\x32\x1c\x68\x2d\x5b\x14\x52\xb7\x85\x92\x42\x5b\x39\x27\xec\x97\x4f\xe6\xa5\xc5\x0a\x95\x6f\x0a\xf2\x9f\x31\x46\x51\xd9\x42\x49\x84\x13\x8a\xb5\x29\x91\xe2\x0b\x08\xab\x71\xed\x86\x81\xf9\x07\x13\xc2\x8c\x26\x31\xc4\xf7\xd6\x94\xab\x90\x20\x70\xde\x6e\x4a\xdf\x33\x00\x80\xa2\xaa\xc2\x46\xa3\x24\x4b\x7c\xeb\x00\x4e\x7d\xeb\xc4\xa5\x56\x75\x23\x59\x22\xc7\x9c\xc2\x69\x48\xf0\x78\x9f\x25\x3b\xe7\x66\x2d\xf6\xfc\x44\x9b\x81\x1d\xe5\xf8\x60\x7c\xa3\x15\xd4\x1b\x55\xf2\xd3\x03\x76\x19\x63\x64\x03\x6f\xab\xca\xa2\x73\x7c\x82\x9c\xfd\x81\x7e\xcf\x12\x8b\x7e\x63\xa3\x27\xb7\x2d\xe1\xa0\x37\xba\x90\xb8\x6d\x29\x82\x9f\x3c\x64\x88\x25\x03\x45\x14\x30\x6e\xaf\x57\x63\x76\x38\xa5\x6b\x92\xad\x57\x85\x21\x5f\x39\xf8\xd6\x4d\x51\x62\xd1\xf9\xf1\x7a\xbc\x2a\xdb\xce\x7d\x0e\xf1\x6d\xca\xb8\xc4\xbb\x03\x22\x5c\x1b\xef\x40\x88\x7d\xee\xdf\xf1\xb2\x83\x30\xc4\x12\x5b\x75\x91\xc3\xff\x07\x2c\x09\x9a\x4a\xba\x80\x74\x71\x71\x7e\x71\x9e\xce\x88\x36\xa9\xb5\x85\xaf\x33\xd0\xc6\x93\xc0\x38\x64\x81\x8d\xec\xb5\xf1\xdc\xc5\x5e\x24\x63\x19\x4e\x16\x39\x7c\xfe\x32\x99\x8b\x91\xb3\x1f\x58\xd2\xd4\x30\x9a\x87\xb2\xfd\x97\x83\x6a\xda\x20\x34\x5e\xcc\xa1\x30\x06\x55\xc5\xc3\x72\x06\x41\xe3\xd2\x62\xe5\xf8\x64\xe2\xc5\x12\xef\x6e\xaf\x57\xfc\x49\x29\xcb\x82\x7b\x1a\xdb\xb8\xb9\x1b\xcf\x7c\xd4\x58\xe2\x5d\x4c\x6b\x50\x16\x42\x64\x49\x30\x8f\x75\x75\x8f\xb3\x19\x4a\xc3\x9d\xdd\x1e\x29\x71\x78\xf2\xd2\xdf\x43\xfc\x2a\x52\xaf\xd3\x33\x03\xb4\x56\x53\xde\x49\x9f\x02\xb6\xdb\xa7\x46\xc8\xe1\x31\xe4\x5d\x4b\x75\x5e\xbc\xa3\x1b\x35\x4f\xf7\x3c\x42\xd3\x99\x16\x3b\x0a\x5c\x2b\xb0\xf8\x73\xd3\x58\xac\xd2\x31\xd9\x66\x2d\x3e\xa2\x6c\x9c\x47\xfb\x42\x73\x53\x1c\xbb\x54\xcc\xa6\x20\x59\x80\x6b\xd5\x8c\x60\xa9\x5e\x0a\xbd\xb8\x26\x29\xc5\x53\x5f\x9a\x74\xb4\xa6\x76\xc8\x42\xd5\xc8\x6c\x52\xae\xc8\x8e\x36\x7c\x00\x58\x42\x1f\x72\xf1\x89\xbf\xc9\xc4\x95\xaa\x75\xab\x78\xf8\xef\xc4\xb4\x02\xdf\xc3\xcb\xc6\x81\x50\x12\x0a\x0f\xcf\x9d\xed\x2a\xf2\x44\x3e\x76\x11\x6f\x55\xf6\x37\x05\xba\x6c\xb5\x43\x1e\x66\xf1\x99\x96\xd7\x86\x67\xff\x42\x5c\x92\x60\x25\xd2\x40\x41\x3f\x1c\x54\xd5\x30\xb0\xbe\x47\x55\x85\x1f\x29\xfb\x15\x00\x00\xff\xff\x6a\xc5\x93\x59\x76\x07\x00\x00")

func grpcGrpcServerGogoBytes() ([]byte, error) {
	return bindataRead(
		_grpcGrpcServerGogo,
		"grpc/grpc.server.gogo",
	)
}

func grpcGrpcServerGogo() (*asset, error) {
	bytes, err := grpcGrpcServerGogoBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "grpc/grpc.server.gogo", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _httpHttpClientGogo = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x56\x5f\x6f\xdb\x38\x0c\x7f\xb6\x3f\x05\x4f\xc8\x06\xbb\x70\xd4\x3e\x0e\x39\xe4\x61\x1b\xae\xd8\x86\xae\x2d\x9a\xdc\xd3\x30\x1c\x52\x47\x69\x75\x4d\x24\x57\x92\xfb\x07\x86\xbf\xfb\x81\x94\xec\x28\x69\xe3\x1d\x06\xf4\xc9\x16\xf5\x23\xf9\x13\x49\x91\x6a\x9a\xa5\x58\x49\x25\x80\xdd\x3a\x57\xf1\x72\x2d\x85\x72\x0c\xc6\x6d\xdb\x34\x63\x18\xe9\xeb\x7f\x61\x32\x05\x8e\x82\xb4\x5a\x94\x77\x8b\x1b\x01\x4d\x83\x72\x7e\xe9\x97\xfc\x7c\xb1\x11\x6d\x9b\xa6\x72\x53\x69\xe3\x20\x4b\x13\x56\x6a\xe5\xc4\x93\x63\xf8\x6b\x9e\x2b\xa7\x8f\xdd\xda\xe2\x6a\xb5\x21\xa1\x75\x46\xaa\x1b\x92\x38\xb9\x11\x2c\x4d\x93\xea\x1a\x58\x30\xfc\x95\x0c\x5d\x5e\xb7\x2d\x02\x6e\xa4\xbb\xad\xaf\x79\xa9\x37\xc7\x4f\xe3\x8d\x5e\x1e\x23\xd1\xc0\x73\x78\xfb\xf8\xc6\x54\x25\x4b\xf3\x34\xc5\xb3\x98\x85\xba\x11\x30\xb2\xc2\x3c\xc8\x52\xe0\xa9\xc8\xd9\xcc\xaf\x6d\xdb\x12\x6a\xf4\x20\x8c\x95\x5a\xe1\x3e\x7b\x38\xa1\x48\xa4\x4d\xd3\x29\xeb\xca\x91\x66\xb0\xc2\x2f\x2a\x27\xb5\xb2\x01\x35\x06\xb9\x02\x71\xef\x71\x14\x17\x60\x99\xf6\x10\x1e\x54\x72\x6f\x12\x00\x20\x62\x75\x57\xc0\xe8\xc1\x5b\x46\xd5\xcf\x5a\x59\xb7\x50\x8e\x7f\x5f\x54\x01\xdc\x29\x04\x0f\x77\xc0\x02\x53\xb6\x07\xe8\x4f\x30\x85\xd1\x03\x9f\xe9\xda\x94\xa2\x77\xe9\x41\x42\x2d\x23\x12\xdd\x0a\x95\xf7\xfe\x31\xad\xab\x5a\x95\x98\xf2\xee\xc8\x3e\xdd\x5f\xe6\xf3\x4b\xfc\xcb\x72\xf0\xc9\x84\x86\xcc\x19\xe1\x6a\xa3\x82\xcc\xf2\x6f\x5a\xaa\xec\xc7\x4f\xbf\x6c\x3a\xe9\x5c\x9f\xe9\x47\x61\x32\xf6\x6a\x25\xb1\xbc\x80\xd7\x90\xbb\x04\x58\xde\x16\xc0\xc6\x2c\x4f\xdb\x01\x8a\x97\xda\xb8\x2c\x07\xa9\xdc\x2e\xbf\x0f\x27\x1f\x4e\x06\x15\x3f\x2e\x97\xe6\xc0\xd9\x56\x1b\xc7\x67\x95\x91\xca\xad\x32\xf6\xce\x4e\xde\x2d\x59\x31\x14\xa0\x03\x9b\x9e\x1a\xd2\x4f\xdd\x73\x25\x60\xae\xef\x84\x3a\x45\x42\xc8\xaa\xf7\x1d\x76\x5f\x35\xf1\x99\xca\x1c\x81\x75\x89\x07\x4c\x16\xcb\xa5\x09\x59\x0e\xda\x89\x2d\x6f\xc5\x46\xec\x88\xdc\xda\x42\x02\x00\x47\x6e\x6d\xb1\xd4\x56\x12\x85\xbd\xfb\x2d\x93\x34\xf1\x17\x89\xb4\x8f\xb6\x17\x8b\x7b\xc7\x3d\xf5\x01\x72\x17\x95\xf3\xe7\x39\x1a\x00\xe5\xa1\xca\xe6\x67\x33\x4f\x27\x43\x8a\x11\xbd\xfc\x57\x2e\x9a\x34\xe9\xb2\x83\xce\x4a\x18\x74\x87\xf0\xa4\xe4\xe8\x64\x0a\x6e\x6d\xd3\xa4\x4d\xbb\x4a\x9f\x51\xbc\xb2\x10\x36\x1f\xb2\xb7\x71\x1f\x5c\x4c\xc1\xff\xc4\x24\x3e\x89\x85\x11\xe6\x63\xed\x6e\x33\xca\xcb\x36\x25\x6f\x14\x89\x3e\xf9\x53\xa0\xff\x98\x8c\x87\x66\xa1\x14\x5e\x96\xc1\xdb\x50\x0a\xee\xa6\xe0\x7f\x62\x42\xe7\xe2\x71\xc0\x00\x36\x5c\x0b\x9c\xf3\x61\x56\xf9\x20\x0b\x24\x51\x62\x3f\x7e\x3f\x00\x42\xa2\x3e\x77\x13\x3f\x3e\x59\x01\x69\x42\x97\x70\x32\xd4\x55\x0a\x3c\x4c\xb2\xd2\x06\xfe\x29\x20\x4c\x14\x3f\x07\x88\x3a\x9a\xd5\x95\xcb\xca\x9c\x70\x72\x05\xbe\x54\xff\x98\x82\x92\xeb\xfd\xe2\x21\xc7\x38\x49\x3b\x68\x17\xb8\x18\xdd\x07\x33\x4a\xde\xb9\x78\xcc\xa2\xe5\xf6\xee\x91\xb7\xdc\x3b\x0f\x79\x2b\x31\xf6\xfd\x14\xdc\x08\x77\xab\x97\x3b\x73\xf0\x3b\x89\x6c\x34\xd8\x46\x68\x7b\x8b\x64\x95\xb6\x6e\x77\xf4\x8d\x6a\x23\x69\xeb\xd5\x89\xe8\xc7\x26\x39\xf1\x56\x76\x66\xed\x2b\x13\xd1\x2b\xec\x4f\x5d\x64\x11\x8d\xdc\x58\xef\xc5\xe8\x0d\x16\xe2\xe1\xfb\x42\xf1\xe5\x18\xf6\xec\xd8\x01\x5c\x1c\x86\x43\x03\x39\xc6\xc7\xa3\xf9\xb0\xcf\xda\xc8\x83\x0e\x31\xaa\xbf\xeb\x69\x3b\xf6\x0f\x21\xe3\x35\x5d\xc6\x5f\x5f\xe7\xa6\x4b\xa0\xdf\xcb\x4a\xf7\x04\xe1\x81\x88\xb1\xc6\x6f\x01\x52\xc1\x51\x75\xcd\xb7\xe0\x2b\x71\x5f\x0b\xeb\xe6\xcf\x95\x68\xdb\x1c\xb2\xfd\x5d\xac\x4b\xeb\x77\x0b\x10\xc6\x68\x43\x9d\x83\x6e\xd0\x64\x0a\x3f\x7e\x46\xb5\x7d\x25\xee\x2f\x2a\xba\xae\x91\xd0\x97\x2c\xbd\x2c\xb6\x39\xa2\xd7\xc7\x2e\xee\xef\xab\xb3\x2c\x4d\x76\x44\x61\x46\x74\xb7\x90\x34\xe2\xfd\x2f\xda\xba\xac\xe4\xd8\x08\xfc\x5e\xd3\x84\xdc\x61\x72\x42\xbd\x27\x7b\x5e\xbe\x66\xf8\x5c\xc5\x9f\x53\x6d\x36\x0b\x47\xcc\xc2\x5b\xae\x6d\x59\x01\x07\x5e\x4b\x7e\x63\xef\x71\xe4\x85\x3b\x71\x67\x79\xc7\x65\x0c\x62\x6d\xc5\x01\x12\xa8\x57\x1b\xd9\x05\x22\xd9\x96\x44\x92\xec\x87\x86\xb2\xa7\xdc\x7e\x78\x2e\x3f\x7d\x9b\x5d\x9c\x67\x52\x11\x3e\xb4\x3b\xdf\xc6\xfa\x39\x13\x35\x33\x4a\xd9\x14\x16\x55\x25\xd4\x92\xba\x77\x11\xf7\xa9\xed\x2c\x3c\xa5\xe9\xb1\x35\xd2\xf7\xa8\x7b\xaa\x00\x4c\x7b\x9c\xdf\xc5\x9d\x08\x45\x44\x46\x39\xe7\x39\xd1\x40\x68\xe4\x3e\xb4\x38\x25\xd7\x64\x85\x4c\xea\x9a\x9a\xf2\xfb\xc3\x35\xd7\xb4\xbd\xad\xc9\xb4\xef\xba\xfc\xaf\x27\x51\xd6\x4e\x60\x8d\x17\x40\xc4\x28\xa9\x3e\x22\x57\xc2\x56\x5a\x59\x91\xe9\xda\xe5\xf9\x9f\xff\x87\x48\x90\xe9\xda\x15\xb8\x91\xe2\xcb\xbc\xbb\x7e\xd1\x23\x3d\x12\xa6\xff\x05\x00\x00\xff\xff\x8e\x8b\x72\xef\xd2\x0d\x00\x00")

func httpHttpClientGogoBytes() ([]byte, error) {
	return bindataRead(
		_httpHttpClientGogo,
		"http/http.client.gogo",
	)
}

func httpHttpClientGogo() (*asset, error) {
	bytes, err := httpHttpClientGogoBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "http/http.client.gogo", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _httpHttpServerGogo = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xbc\x57\x4d\x6f\xe3\x36\x13\x3e\x4b\xbf\x82\x2f\x61\xbc\x20\x03\x99\x31\x7a\x5a\x04\xf0\xa1\x0d\xb0\xd8\x00\xdd\x5d\x23\xc9\xa2\x87\xa2\x28\x14\x8b\x76\xd8\xd8\xa4\x42\x52\xce\x06\x86\xfe\x7b\x31\xe4\xc8\xa6\x25\xc7\x75\x5a\x60\x73\x8a\x38\x5f\xcf\x0c\x87\xf3\x8c\xb7\xdb\x4a\x2e\x94\x96\x84\x3e\x7a\x5f\x0b\x27\xed\x46\x5a\x4a\xc6\x6d\xbb\xdd\x8e\xc9\xc8\x3c\xfc\x45\xae\xa6\x44\xc0\x41\x5e\x97\xf3\xa7\x72\x29\xc9\x76\x0b\xe7\x62\x16\x3f\xc5\x97\x72\x2d\xdb\x36\xcf\xd5\xba\x36\xd6\x13\x96\x13\x42\x08\x9d\xdb\xd7\xda\x9b\x4b\xbf\x72\x34\xcf\xa8\x96\xfe\x12\x02\xd0\x2c\xcf\xb3\xfa\x81\x50\xf4\x71\x13\x6c\x66\x0f\x6d\x0b\x5a\x4b\xe5\x1f\x9b\x07\x31\x37\xeb\xcb\xef\xe3\xb5\xa9\x82\x09\x42\x3a\x2d\xbe\x5c\xda\x7a\x4e\x63\xe4\x53\x6a\x56\xea\x0a\x9c\xf1\x3c\x87\xfc\x6c\xa9\x97\x92\x8c\x40\xa8\xe6\x12\x32\x0d\xa8\xee\xe2\xb7\x6b\xdb\xa0\x35\xda\x48\xeb\x94\xd1\x20\xa7\x9b\x49\xa8\x4e\xbe\xdd\x76\xc6\xa6\xf6\xc1\x12\xbd\x88\xaf\xb5\x57\x46\x3b\xd4\x1a\x13\xb5\x20\xf2\x39\xea\x85\x5a\x11\xca\x4c\x54\x11\x68\xc2\xa3\x4b\x40\x9f\xa0\x7a\x2a\xc8\x68\x13\x3d\x83\xe9\xb5\xd1\xce\x97\xda\x8b\xcf\x65\x8d\xca\x9d\x01\x46\x78\x22\x14\x91\xd2\x9e\xc2\x2e\x83\x29\x19\x6d\xc4\x9d\x69\xec\x5c\xee\x42\x46\x25\xa9\xab\x04\x44\xf7\x05\xc6\xbd\xff\xe1\xaa\xfd\x6b\x1d\xda\xa0\x4b\x39\xb6\xc0\xa7\xfb\xfb\xd9\x5d\xa8\x33\x71\xde\x36\x73\xbf\x0d\xde\x2e\xf6\xf5\x17\x51\x1c\x8e\xcb\xaa\xb2\x21\xb6\xf3\x56\xe9\x65\x38\xab\x95\x5e\x7e\xbb\xbd\x39\x38\xf3\x2b\x17\x31\x5e\xf8\x95\x83\x2a\x2c\xd4\x12\x3e\x83\xb0\xbb\x39\x52\x3f\x88\x01\x1e\x0c\x76\x06\xde\x78\x65\x64\xd1\xe8\x39\xbb\x38\xa1\xc7\xf3\x1c\x74\xc8\xcf\x55\x65\xa5\x73\x2c\xe4\x10\xb1\xf2\x33\xfc\xc7\x7a\x58\xe9\x1b\x8b\xc1\x9c\xdd\x90\x93\x01\xd1\x26\xe4\x6a\x37\x22\x04\x9c\x86\xda\x85\xf3\x16\xb2\x0b\x90\x66\x4a\x2f\x59\x63\xd5\x0f\x85\xd3\xdd\xd7\x94\x34\x56\xf5\x00\xdd\xff\x7a\x17\x2f\x8b\xc1\x0d\x26\x97\xf7\x63\xa0\x41\xd0\x29\x34\x4f\x0f\x16\xbe\x6d\xd6\x75\xce\xdb\x8d\x73\x1e\xce\xec\xbd\x20\xb3\x0c\xe0\x75\xe1\xa7\x5d\x0b\xe7\xd9\x1e\xe3\x17\xf9\x72\xc2\x09\x4c\x0f\x47\x84\x18\xe2\xee\xc3\xe3\x27\xc1\x60\xc1\xe2\xcb\x84\x39\xf3\xff\x13\xca\x80\x1b\xba\xee\x8a\xd0\xab\x0f\x93\x0f\x13\x5a\x00\xe0\x6c\x61\x2c\xf9\xb3\x20\x38\x02\xe3\xe0\x0a\xf0\x40\xdf\xd4\x9e\x39\x7c\x37\xa0\xfc\x18\x24\x57\x53\xf2\xfb\x1f\x83\x91\xf0\xb5\xf6\xfb\xfb\x4b\xa4\x80\x83\x05\x6e\xea\x80\xb2\x01\x4a\x4e\x79\x71\xcc\xb6\x7b\xa5\xf8\x09\xf0\x51\x31\x8e\x39\xb5\x40\x9f\xa1\x59\xfe\x37\x25\x5a\xad\x92\x2e\x8a\x70\xa7\xa4\xac\x6b\xa9\x2b\x16\x3e\x8b\xd4\xff\xbe\xc3\xf7\x6e\x38\x4f\x02\x1c\x64\x48\xa6\x07\x79\xc9\x97\xe8\x51\x08\xc1\x33\x9c\xba\x38\xf8\xd7\xd2\x3f\x9a\xea\x80\x53\x3e\x87\x23\xd7\x1f\xeb\xe0\x70\xaf\x4d\x6b\xe3\x3c\xed\xcd\xf5\x31\x19\xc1\x54\x00\xf1\x50\x84\x01\x23\x1d\x85\x80\xd1\xdb\x01\x87\x91\xe4\x2f\x61\x9b\x68\xd4\x67\x34\x40\xc4\xe9\xc0\xee\x4d\x6a\x43\x2f\x29\xb9\x1d\x35\x1e\x52\x5d\x44\x4a\x4f\xe8\xa6\xe5\x79\x8b\xf8\xfa\x36\x29\x0d\x9e\x8e\xdf\x58\x75\x32\x38\x54\xfd\xbf\x46\xdd\x53\xee\x3f\x59\x1c\x3b\x3b\x68\x3f\x71\x6b\x1a\x2f\xd9\x81\xa3\xa4\x1f\x63\x83\x31\xd8\xcb\xf6\x55\x6b\xdb\xf4\x65\xc5\x30\x58\x00\xc8\x8e\x0e\xef\x39\xf1\x38\x2b\xbd\x97\x56\x33\xd8\xcc\xc4\xb7\xdb\x9b\x8f\xc6\xae\x4b\x1f\x22\xe0\x36\xd2\xb6\xb4\xd8\x6d\x82\x87\xdb\x24\x0a\x0e\xdf\x39\x1e\x62\x8b\xe2\x19\x1f\x20\x1c\x13\xb9\x72\xc3\x7a\x1f\x81\x06\xde\x1a\xab\x8e\xa5\x79\xac\xee\x89\x87\x4f\xa5\xae\x56\xd2\xb2\xb0\x34\xe3\xc7\xc7\xc0\x00\x51\xde\x87\x99\xa2\xe4\xfb\x1d\xab\xdd\x0d\xa2\x95\xd4\x9d\x2d\x92\x2a\x87\x89\x34\x49\x59\xed\x1d\xd7\xd9\x65\xd8\x73\x59\xfc\xdb\x7c\xc0\xc1\x30\x87\x16\xb7\x30\xa4\x40\xb7\xdb\xb7\xce\x1b\x65\x81\xeb\xce\xe1\xcc\x5e\x31\xd9\x8b\x0d\xd8\xc5\xad\x74\xb5\xd1\x4e\xfe\x66\x95\x97\xb6\x20\x56\x3e\xc7\x6d\x53\xdc\xca\xe7\x46\x3a\x1f\xf8\x56\x85\xc9\xa6\xe5\x0b\x8b\x5c\x8f\xbe\x50\xe5\xfe\xb5\x86\xfb\xc9\x33\x69\x03\x09\x86\x76\x9d\xfd\x82\x52\x66\xe5\x73\x41\x94\xe6\x79\x06\x8d\x6f\xed\x9e\x26\xb2\x6c\xa7\x1a\x51\xb0\x17\x5b\x80\xac\x00\x3d\x9e\x67\xb8\x19\x04\xea\x33\x8d\x0f\xc7\x10\x21\xa1\xff\x41\x9f\x30\xf4\x79\x6d\xb4\x97\xdf\x31\xbc\x56\x2b\x8e\x20\x8e\x85\xec\x7c\xf3\x1c\x76\xf4\x6e\x08\x9c\x5d\x5d\xb8\xda\x77\x56\x34\xfe\x8a\x12\xf7\x80\x90\xd6\x46\x2f\x29\x17\x07\x90\x50\xe1\xce\x97\xbe\x71\xd7\xa6\x92\xec\xa7\xc9\x84\xf3\xd8\x1a\xdd\xd3\x4a\xb0\xfe\x1d\x00\x00\xff\xff\xd1\x21\x97\x7c\x86\x0e\x00\x00")

func httpHttpServerGogoBytes() ([]byte, error) {
	return bindataRead(
		_httpHttpServerGogo,
		"http/http.server.gogo",
	)
}

func httpHttpServerGogo() (*asset, error) {
	bytes, err := httpHttpServerGogoBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "http/http.server.gogo", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _serviceServiceGogo = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\x51\xcd\x6a\xf3\x30\x10\x3c\x67\x9f\x62\x11\xe1\xc3\x0e\x89\x1f\xe0\x83\xef\xf4\xd1\x43\x0f\x0d\xa1\xed\x0b\xf8\x67\x9d\xba\x8d\x64\x45\x92\xd3\x84\x65\xdf\xbd\x48\x56\x29\x0d\xf8\x62\xb3\x33\xe3\x9d\x99\x35\x73\x47\xfd\x60\x08\x95\x27\x77\x19\x5a\x52\xb8\x13\x61\xde\xe1\x7a\x6c\xde\xf1\xef\x3f\xac\x22\x00\xb6\x6e\x3f\xea\x23\x21\x73\xc4\xab\xc3\x3c\x56\xfb\x5a\x93\x08\xc0\xa0\xed\xe8\x02\x16\x80\x88\xa8\xda\xd1\x04\xba\x06\x05\x2b\xd5\xeb\xa0\x12\x98\x1e\xb6\x41\x95\x37\x3c\xa6\x2f\x0e\x8d\x88\x82\x12\x20\x3a\xba\xda\x1c\x09\xd7\x39\x48\xf4\x4e\xca\x97\x79\xf6\x22\x10\x6e\x36\x45\xc8\x92\x6c\x9f\x05\xe8\x83\x9b\xda\xc0\x20\x00\xfd\x64\x5a\xdc\xd3\xe7\x92\xb6\x28\x71\xb3\xb8\x87\x53\x56\x47\x61\x72\x06\xff\x2c\xc9\x58\xa2\x11\x73\x4e\xad\x29\xbc\x8d\x5d\x0a\xfd\x2d\x7f\x4a\x90\x4f\xf7\x4b\x81\x0a\x7f\x69\x97\x7d\xcb\xd8\x6c\x5e\x93\x89\xa2\x0d\x57\xcc\xc7\xac\xfe\xcf\xef\x2d\x3a\x3a\xe3\xc6\x36\xd5\x8f\xfa\x99\xce\x13\xf9\xf0\x7a\xb3\x24\x52\x62\x71\xcf\xc6\x22\x7e\x66\xb7\x48\xce\x8d\xae\x44\x86\x55\x6e\x68\x86\xd3\x16\x7b\x1d\xaa\x87\xc8\xf4\x85\xba\x8f\x81\x93\x19\xb4\x3d\x91\x26\x13\xa8\x53\x25\x08\x30\x93\xe9\x52\xb1\xf4\xe7\xc8\x74\xf2\x0b\xfc\x0a\x00\x00\xff\xff\x09\x27\x3a\xff\x57\x02\x00\x00")

func serviceServiceGogoBytes() ([]byte, error) {
	return bindataRead(
		_serviceServiceGogo,
		"service/service.gogo",
	)
}

func serviceServiceGogo() (*asset, error) {
	bytes, err := serviceServiceGogoBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "service/service.gogo", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"grpc/grpc.client.gogo": grpcGrpcClientGogo,
	"grpc/grpc.server.gogo": grpcGrpcServerGogo,
	"http/http.client.gogo": httpHttpClientGogo,
	"http/http.server.gogo": httpHttpServerGogo,
	"service/service.gogo": serviceServiceGogo,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"grpc": &bintree{nil, map[string]*bintree{
		"grpc.client.gogo": &bintree{grpcGrpcClientGogo, map[string]*bintree{}},
		"grpc.server.gogo": &bintree{grpcGrpcServerGogo, map[string]*bintree{}},
	}},
	"http": &bintree{nil, map[string]*bintree{
		"http.client.gogo": &bintree{httpHttpClientGogo, map[string]*bintree{}},
		"http.server.gogo": &bintree{httpHttpServerGogo, map[string]*bintree{}},
	}},
	"service": &bintree{nil, map[string]*bintree{
		"service.gogo": &bintree{serviceServiceGogo, map[string]*bintree{}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

