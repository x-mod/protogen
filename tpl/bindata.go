// Code generated by go-bindata.
// sources:
// tpl/grpc/grpc.client.gogo
// tpl/grpc/grpc.server.gogo
// tpl/http/http.client.gogo
// tpl/http/http.server.gogo
// tpl/service/service.gogo
// DO NOT EDIT!

package tpl

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _grpcGrpcClientGogo = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x55\x41\x6b\xdc\x3c\x10\x3d\x5b\xbf\x62\x3e\x91\x7c\x48\xc1\x51\x72\x0c\x0b\x3e\x94\x14\x4a\x4a\x48\x03\xbb\xd0\x43\x08\xc5\x2b\xcb\xae\x5a\xaf\x24\x24\x6d\x43\x30\xfe\xef\x65\x24\x27\xd9\x24\xbb\x26\x97\xee\x61\x6d\x8d\x67\xde\xbc\xf7\x3c\x92\x87\xa1\x51\xad\x36\x0a\x68\xe7\x9d\x14\xb2\xd7\xca\x44\x0a\xa7\xe3\x38\x0c\xa7\x70\x64\xd7\xbf\x60\x51\x81\xc0\x00\x71\xb5\xfc\x5d\x77\x0a\x86\x01\xe3\xe2\x36\x2f\xc5\x4d\xbd\x51\xe3\x48\x88\xde\x38\xeb\x23\x30\x02\x00\x40\xa5\x7f\x74\xd1\x9e\xc5\x3e\x50\x52\xd0\x76\x13\xf1\x12\xa2\xd7\xa6\x0b\x94\x90\xc2\xad\x81\x4e\x40\x57\xa9\xf0\x76\x3d\x8e\x98\xd3\x59\xdb\xf5\x4a\x74\xb6\xaf\x4d\x27\xac\xef\xce\x90\xd9\xe1\x27\x67\xd2\xab\x46\x99\xa8\x6b\x6c\xc5\x09\x41\xe2\xbe\x36\x9d\x82\xa3\xa0\xfc\x1f\x2d\x15\x4a\x48\x9d\x96\x79\x1d\xc6\x91\xb4\x5b\x23\x51\xc9\x94\x32\xa9\xf8\xe2\x9d\xc4\x3b\xc6\x21\x73\x85\x21\xc9\xf1\x2a\x6e\xbd\x99\x62\x41\x7c\xb5\xda\xb0\xbb\xfb\xbc\x1c\x9e\xa2\x2b\x7b\x6d\x1f\x94\x67\x74\xaf\x41\x94\x97\xb0\x2f\xf3\x35\x01\xca\xc7\x12\xe8\x29\xe5\x64\x8e\xe2\xad\xf5\x91\x71\xd0\x26\xbe\xe6\x77\x71\x7e\x71\x3e\x5b\xf8\xa9\x69\xfc\x01\x6d\xed\x26\x8a\xa5\xf3\xda\xc4\x96\xd1\xe3\xb0\x38\x6e\x68\x39\x67\xd0\x81\x87\x99\x1a\xd2\x27\xf1\xd1\xa9\xfd\x49\x97\x69\xcc\x90\xc6\x56\xc6\xcc\xa2\x6e\x1a\x3f\xf1\x4a\xeb\xd8\x07\x80\x93\xd8\x07\x71\x69\x4d\xab\x73\xd0\xad\xc5\x3b\xbc\x8c\xf5\x91\x7e\xdf\x5c\xd4\xd6\x00\xba\xc3\x4e\x66\xf2\x38\x39\xe0\x20\xba\xa7\x42\x60\x3b\x5c\xf9\x07\x1a\xbe\xb6\x19\xbb\x4b\x98\xed\x9f\x0b\xf0\x27\x45\xea\x55\x25\x7b\x52\x74\x44\xa5\xfb\xe9\xad\xae\x97\xd9\x2b\x86\xe6\xed\x78\xf7\xcf\x49\x62\xbf\x0a\x5f\xd9\x1b\x8a\x37\xea\x61\x06\x82\x59\x17\x03\x08\xf1\xfe\x9d\xbe\x65\xc7\x61\xf6\x85\x95\xa0\xbc\xb7\x9e\x4f\x22\x24\xee\xf7\xff\x67\xf2\x5f\xa8\xa3\xad\x8b\xb9\xad\x52\x4e\x8a\xf0\xbf\xb5\x1e\x7e\x94\x60\x5d\xc4\x06\xf9\x88\x49\x12\x5e\xf0\xac\x8b\x4c\xf2\xa9\x26\x5d\xba\x94\xb1\xa8\xe0\xee\x3e\x9d\xb0\x9f\x75\xdd\x67\x51\x43\x46\xd5\xed\x64\xe0\x7f\x15\x18\xdd\xef\x80\xe5\xd2\x0a\x6a\xe7\x94\x69\x58\x5a\x96\x90\x50\xbe\xeb\xf8\x73\xe5\x6b\x13\xf0\xe4\xbc\x7c\x39\x00\xd9\xce\x61\x28\x6e\xd4\xc3\xea\x7a\xc9\x12\x3a\xe7\x13\x2b\x50\x7d\x50\x1f\x6f\x72\x65\x82\x92\x5b\xaf\xd8\x53\x3d\xfe\x67\x97\xad\x31\xc9\x78\x14\xf7\x2c\x8d\xe5\x89\x2d\x33\xae\x10\x82\x93\x42\xb7\x29\xed\x59\x5f\x51\x4c\x63\x66\x74\x9f\x10\x48\x91\xad\x90\x87\x76\x37\x54\xb8\xf5\xf7\x4d\xd3\x34\x49\x48\x86\xef\x4e\xb0\x2c\x11\x9d\x8c\xe9\x6b\xa0\x4c\x33\xe2\x9d\x32\x0d\x7e\xc8\xfe\x06\x00\x00\xff\xff\xd9\x67\x8b\x3a\xf4\x06\x00\x00")

func grpcGrpcClientGogoBytes() ([]byte, error) {
	return bindataRead(
		_grpcGrpcClientGogo,
		"grpc/grpc.client.gogo",
	)
}

func grpcGrpcClientGogo() (*asset, error) {
	bytes, err := grpcGrpcClientGogoBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "grpc/grpc.client.gogo", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _grpcGrpcServerGogo = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x95\xdf\x6b\xdb\x30\x10\xc7\x9f\xad\xbf\xe2\x66\xca\x90\x4b\xaa\x94\x3d\x95\x80\x1f\x46\x19\xa3\x50\xb2\xb2\x94\xbd\x8c\x31\x1c\xfb\xac\x79\xb3\x25\x4d\x52\xd2\x16\xe3\xff\x7d\x9c\xac\xb4\xee\xb2\xa6\xdb\xa0\x4f\x89\xa4\xd3\xf7\x3e\xf7\x4b\xee\xfb\x0a\xeb\x46\x21\xa4\xd2\x9a\x52\x38\xb4\x5b\xb4\x29\x9c\x0c\x43\xdf\x9f\xc0\x91\x5e\x7f\x87\x45\x0e\x82\x36\x98\x29\xca\x1f\x85\x44\xe8\x7b\xda\x17\x57\xe3\x52\x2c\x8b\x0e\x87\x81\xb1\xa6\x33\xda\x7a\xe0\x2c\x49\x4b\xad\x3c\xde\xfa\x94\xfe\xda\x3b\xe3\xf5\xdc\xb7\x8e\x56\x75\x17\x36\x15\xfa\x94\xb1\xc4\xac\x21\x8d\x62\x17\xe1\xf2\xd5\x7a\x18\xe8\x5c\x36\xfe\xdb\x66\x2d\x4a\xdd\xcd\x6f\x4f\x3a\x5d\xcd\x65\xab\x65\x38\xd0\x5a\xb6\x28\xa4\x6e\x0b\x25\x85\xb6\x72\x4e\xd8\x4f\x9f\xcc\x4b\x8b\x15\x2a\xdf\x14\xe4\x3f\x63\x8c\xa2\xb2\x85\x92\x08\x47\x14\x6b\x53\x22\xc5\x17\x10\x56\xe3\xda\x0d\x03\xf3\x77\x26\x84\x19\x4d\x62\x88\xef\xad\x29\x57\x21\x41\xe0\xbc\xdd\x94\xbe\x67\x00\x00\x45\x55\x85\x8d\x46\x49\x96\xf8\xd6\x01\x1c\xfb\xd6\x89\x73\xad\xea\x46\xb2\x44\x8e\x39\x85\xe3\x90\xe0\xf1\x3e\x4b\x76\xce\xcd\x5a\xec\xf9\x89\x36\x03\x7b\x96\xe3\x83\xf1\x8d\x56\x50\x6f\x54\xc9\x8f\x0f\xd8\x65\x8c\x91\xcd\xbe\xd4\xdb\xaa\xb2\xe8\x1c\x9f\xc4\x90\xfd\x85\xc3\x9e\x25\x16\xfd\xc6\x46\xd7\x6e\x5b\xc2\x41\xf7\x74\x21\x71\xdb\x52\x04\x3f\x79\x48\x19\x4b\x06\x0a\xf1\xcf\x5c\xd7\x97\xab\x31\x7f\x9c\x12\x3a\xc9\xe7\x8b\xd2\x91\xaf\x1c\x7c\xeb\x0e\xb2\xc5\x3e\xe1\xcf\x97\xf0\x45\x61\x77\xee\x73\x88\xff\xa6\xd0\x4b\xbc\x39\x20\xc2\xb5\xf1\x0e\x84\xd8\xe7\xfe\x1d\x2f\x3b\x08\x43\x2c\xb1\xbb\x17\x39\xbc\x3e\x60\x49\xd0\x54\xf4\x05\xa4\x8b\xb3\xd3\xb3\xd3\x74\x46\xb4\x49\xad\x2d\x7c\x9d\x81\x36\x9e\x04\xc6\xb9\x0c\x6c\x64\xaf\x8d\xe7\x2e\xb6\x2f\x19\xcb\x70\xb2\xc8\xe1\xf3\x97\xc9\x28\x8d\x9c\xfd\xc0\x92\xa6\x86\xd1\x3c\xd4\xf1\x55\x0e\xaa\x69\x83\xd0\x78\x31\x87\xc2\x18\x54\x15\x0f\xcb\x19\x04\x8d\x73\x8b\x95\xe3\x93\x47\x42\x2c\xf1\xe6\xfa\x72\xc5\x1f\x94\xb2\x2c\xb8\xa7\x49\x8f\x9b\xbb\x89\xce\x47\x8d\x25\xde\xc4\xb4\x06\x65\x21\x44\x96\x04\xf3\x58\x57\x77\x3f\xce\xa1\x34\xdc\xd9\xed\x33\x25\x0e\xbf\xbc\xf4\xb7\x10\x1f\x52\x6a\x7e\xfa\xcd\x00\xad\xd5\x94\x77\xd2\xa7\x80\xed\xf6\xa1\x11\x72\xb8\x0f\x79\xd7\x52\x9d\x17\xef\xe8\x46\xcd\xd3\x3d\x8f\xd0\x74\xa6\xc5\x8e\x02\xd7\x0a\x2c\xfe\xdc\x34\x16\xab\x74\x4c\xb6\x59\x8b\x8f\x28\x1b\xe7\xd1\x3e\xd1\xdc\x14\xc7\x2e\x15\xb3\x29\x48\x16\xe0\x5a\x35\x23\x58\xaa\x97\x42\x2f\x2e\x49\x4a\xf1\xd4\x97\x26\x1d\xad\xa9\x1d\xb2\x50\x35\x32\x9b\x94\x2b\xb2\xa3\x0d\x4f\x04\x4b\xe8\xed\x17\x9f\xf8\x9b\x4c\x5c\xa8\x5a\xb7\x8a\x87\x4f\x55\x4c\x2b\xf0\x3d\xbc\x6c\x1c\x08\x25\xa1\xf0\xf0\xd8\xd9\xae\x22\x0f\xe4\x63\x17\xf1\x56\x65\xff\x52\xa0\xf3\x56\x3b\xe4\x61\x16\x1f\x69\x79\x6d\x78\xf6\x3f\xc4\x25\x09\x56\x22\x0d\x14\xf4\x8d\x42\x55\x0d\x03\xeb\x7b\x54\x55\xf8\xf6\xb2\x5f\x01\x00\x00\xff\xff\x74\xc6\x2e\x82\xa9\x07\x00\x00")

func grpcGrpcServerGogoBytes() ([]byte, error) {
	return bindataRead(
		_grpcGrpcServerGogo,
		"grpc/grpc.server.gogo",
	)
}

func grpcGrpcServerGogo() (*asset, error) {
	bytes, err := grpcGrpcServerGogoBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "grpc/grpc.server.gogo", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _httpHttpClientGogo = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x57\xdf\x6f\xdb\xb8\x0f\x7f\xb6\xff\x0a\x7e\x85\x6c\x90\x0b\xc7\xdd\xe3\x90\x2f\xfc\xb0\x0d\x37\x6c\xc3\xd6\x16\x4d\xee\x69\x18\x0e\xae\xa3\xb4\xbe\x26\x92\x2b\xc9\xfd\x01\xc3\xff\xfb\x81\x94\xec\x28\x69\xed\x1d\x0e\xe8\x53\x2c\xea\x43\xf2\x23\x92\xa2\x98\xb6\x5d\x8b\x4d\x25\x05\xb0\x1b\x6b\xeb\xac\xdc\x56\x42\x5a\x06\xf3\xae\x6b\xdb\x39\xcc\xd4\xd5\xdf\xb0\xc8\x21\x43\x41\x5c\x17\xe5\x6d\x71\x2d\xa0\x6d\x51\x9e\x5d\xb8\x65\x76\x56\xec\x44\xd7\xc5\x71\xb5\xab\x95\xb6\xc0\xe3\x88\x95\x4a\x5a\xf1\x68\x19\x7e\xea\xa7\xda\xaa\x53\xbb\x35\xb8\xda\xec\x48\x68\xac\xae\xe4\xb5\x61\x71\x1c\xd5\x57\xc0\xbc\xc1\xaf\x64\xe0\xe2\xaa\xeb\x10\x73\x5d\xd9\x9b\xe6\x2a\x2b\xd5\xee\xf4\x71\xbe\x53\xeb\x53\x24\xe8\xf9\x4d\x6f\x9f\x5e\xeb\xba\x64\x71\x12\xc7\x78\x06\x5d\xc8\x6b\x01\x33\x23\xf4\x7d\x55\x0a\x3c\x0d\x39\x5b\xba\xb5\xe9\x3a\x42\xcd\xee\x85\x36\x95\x92\xb8\xcf\xee\xdf\x51\x04\xe2\xb6\xed\x95\x55\x6d\x49\xd3\x5b\xc9\xce\x6b\x5b\x29\x69\x3c\x6a\x0e\xd5\x06\xc4\x9d\xc3\x51\x3c\x80\x71\xe5\x20\x99\x57\x49\x9c\x49\x00\x80\x80\xd5\x6d\x0a\xb3\x7b\x67\x19\x55\x3f\x29\x69\x6c\x21\x6d\xf6\xa3\xa8\x3d\xb8\x57\xf0\x1e\x6e\x81\x79\xa6\xec\x08\x30\x9c\x20\x87\xd9\x7d\xb6\x54\x8d\x2e\xc5\xe0\xd2\x81\x84\x5c\x07\x24\xfa\x15\x2a\x1f\x7d\x63\x3a\x37\x8d\x2c\x31\xd5\xfd\x91\x5d\x9a\xbf\xac\x56\x17\xf8\xc5\x13\x70\x49\x84\x96\xcc\x69\x61\x1b\x2d\xbd\xcc\x64\xdf\x54\x25\xf9\xcf\x5f\x6e\xd9\xf6\xd2\x95\xfa\xae\x1e\x84\xe6\xec\xc5\x0a\x62\x49\x0a\x2f\x21\x0f\x09\xb0\xa4\x4b\x81\xcd\x59\x12\x77\x13\x14\x2f\x94\xb6\x3c\x81\x4a\xda\x43\x7e\xef\xdf\xbd\x7f\x37\xa9\xf8\x61\xbd\xd6\x23\x67\xdb\xec\x6c\xb6\xac\x75\x25\xed\x86\xb3\x37\x66\xf1\x66\xcd\xd2\xa9\x00\x8d\x6c\x3a\x6a\x48\x3f\xb6\x4f\xb5\x78\x0e\x5a\xa9\x5b\x21\x3f\x23\x43\xa4\x39\x90\x19\x83\xa3\xcd\x4f\x54\xf7\x08\x6c\x4a\x3c\x71\x54\xac\xd7\xda\xa7\xdd\x6b\x47\xa6\xbc\x11\x3b\x71\x20\xb2\x5b\x03\x11\x00\x9c\xd8\xad\xc1\xda\xdb\x54\x28\x1c\xdc\x4f\x50\x8b\x23\x77\xd5\xc8\xdc\xc9\xfe\xea\x65\x8e\xc9\xf8\xe1\xf6\x6c\xcf\x6b\xeb\x0e\x78\x32\x01\x4a\xc6\xea\x70\xf5\x7d\xe9\x08\x73\x3c\x44\x70\x80\xe4\x77\x3e\xdb\x38\xea\x13\x8a\xde\x4b\x98\xf4\x8f\xf0\xa8\xcc\xd0\x49\x0e\x76\x6b\xe2\xa8\x8b\x47\x2f\xc7\x92\x42\xcc\x7d\xa4\x5d\x94\x5f\x87\x8f\x77\x91\x83\xfb\x98\x64\x85\x25\x2d\x8c\xe1\x54\x13\xaf\x49\x8a\x1c\xe4\x80\x3f\x93\x84\x3e\x8a\x42\x0b\xfd\xa1\xb1\x37\x9c\x8a\x6d\xa2\xce\x5e\x29\x9b\x43\x89\xe7\x40\xdf\x93\x74\x9d\x2e\xf7\x05\xff\xbc\xd8\x5f\x87\xa3\x77\x97\x83\xfb\x08\x19\x9e\x89\x87\x09\x03\xf8\xf0\x18\xc8\xb2\x6c\x9a\x55\x32\xc9\x02\x49\x94\xf8\x2e\xbd\x9d\x00\x21\x51\x57\x7f\x0b\x37\x3e\xb0\x14\xe2\x88\x7a\xcf\x62\xaa\xbb\xa6\x78\x98\x68\xa3\x34\xfc\x95\x82\x7f\x59\xdd\x7b\x48\xd4\xd1\xac\xaa\x2d\x2f\x13\xc2\x55\x1b\x70\xf7\xef\x7f\x39\xc8\x6a\x7b\x7c\x01\xc8\x31\xce\x16\x3d\xb4\x0f\x5c\x88\x1e\x82\x19\x24\xef\x4c\x3c\xf0\x60\xb9\x6f\x28\xe4\x2d\x71\xce\x7d\xde\x4a\x8c\xfd\x30\x0d\xec\x84\xbd\x51\xeb\x83\x79\xe0\x07\x89\x4c\xf0\xc0\xcf\xd0\xf6\x1e\xc9\x6a\x65\xec\xe1\x08\x30\x6b\x74\x45\x5b\x2f\x4e\x06\x6e\x7c\x20\x27\xce\xca\xc1\xcc\xf1\xc2\x64\xe0\x14\x8e\xa7\x0f\x64\x11\x8c\x1e\xa1\xde\xb3\x11\xc4\x5b\x08\x87\x90\x67\x8a\xcf\xc7\x11\xc7\x8e\x8d\xe0\xc2\x30\x8c\x0d\x26\x21\x3e\x1c\x51\xc6\x7d\x36\xba\x1a\x75\x88\x51\xfd\xaf\x9e\xf6\xe3\xcf\x18\x32\x5c\xd3\x65\xfc\xfd\x75\x6e\xfb\x04\xba\x3d\x5e\xda\x47\xf0\x03\x32\xc6\x1a\x7f\x53\xa8\x24\x9c\xd4\x57\xd9\x1e\x7c\x29\xee\x1a\x61\xec\xea\xa9\x16\x5d\x97\x00\x3f\xde\xc5\xba\x34\x6e\x37\x05\xa1\xb5\xd2\xd4\x39\xe8\x06\x2d\x72\xf8\xf9\x2b\xa8\xed\x4b\x71\x77\x5e\xd3\x75\x0d\x84\xae\x64\x69\xc2\xda\xe7\x88\xa6\xb0\x43\xdc\x9f\x97\xdf\x79\x1c\x1d\x88\xfc\x3b\xd7\xdf\x42\xd2\x08\xf7\xbf\x28\x63\xb9\x7b\x0f\xdc\x5e\xdb\xfa\xdc\x61\x72\x7c\xbd\x47\x47\x5e\xbe\x72\x1c\xdb\xf1\xe3\xb3\xd2\xbb\xc2\x12\x33\x3f\xd3\x76\x1d\x4b\x61\x64\x6a\x74\x1b\x47\x43\xa2\x13\x1e\xc4\x9d\x25\x3d\x97\x39\x88\xad\x11\x23\x24\x50\xaf\xd1\x55\x1f\x88\x68\x5f\x12\x51\x74\x1c\x1a\xca\x9e\xb4\xc7\xe1\xb9\xf8\xf8\x6d\x79\x7e\xc6\x2b\x49\x78\xdf\xee\x5c\x1b\x1b\x1e\x9e\xa0\x99\x51\xca\x72\x28\xea\x5a\xc8\x35\x75\xef\x34\xec\x53\xfb\xd7\x12\x15\x0f\x5a\x56\x6f\x8d\x07\x96\x93\xa1\x73\xdd\x51\x5d\x60\x31\x84\x59\x2f\x6e\x85\x2f\x2d\x72\x95\x65\x59\x42\xe4\x10\x1a\x90\xf2\x8d\x4f\x56\x5b\xb2\x42\x26\x55\x43\xad\xfa\xed\x78\x25\xb6\xdd\x60\x6b\x91\x0f\xbd\x38\xfb\xe3\x51\x94\x8d\x15\x58\xf9\x29\x10\x31\x4a\xb5\x8b\xd3\xa5\x30\xb5\x92\x46\x70\xd5\xd8\x24\xf9\xff\xbf\x21\xe2\x65\xaa\xb1\x29\x6e\xc4\xf8\xbf\xa5\xbf\x94\xc1\x5f\x98\x40\x18\xff\x13\x00\x00\xff\xff\x4a\x02\xe7\x6b\xe8\x0e\x00\x00")

func httpHttpClientGogoBytes() ([]byte, error) {
	return bindataRead(
		_httpHttpClientGogo,
		"http/http.client.gogo",
	)
}

func httpHttpClientGogo() (*asset, error) {
	bytes, err := httpHttpClientGogoBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "http/http.client.gogo", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _httpHttpServerGogo = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xbc\x57\xdd\x6e\xdb\x36\x14\xbe\x96\x9e\x82\x23\xdc\x81\x2c\x64\xc6\xd8\x55\x11\xc0\x17\x5b\xb0\xa2\x01\xd6\xd6\x70\x12\xec\x62\x18\x06\xc5\xa2\x1d\x2e\x36\xa9\x90\x94\xdd\xc0\xd0\xbb\x0f\x87\x3c\xb2\x25\xcb\x71\x9c\x6d\x68\xae\x22\x9e\xbf\xef\xfc\xf0\x7c\xf4\x76\x5b\xc8\xb9\xd2\x92\xd0\x07\xef\x4b\xe1\xa4\x5d\x4b\x4b\xc9\xb0\xae\xb7\xdb\x21\x19\x98\xfb\xbf\xc9\xe5\x98\x08\x38\x48\xcb\x7c\xf6\x98\x2f\x24\xd9\x6e\xe1\x5c\x4c\xe2\xa7\xf8\x92\xaf\x64\x5d\xa7\xa9\x5a\x95\xc6\x7a\xc2\x52\x42\x08\xa1\x33\xfb\x5c\x7a\x73\xe1\x97\x8e\xc6\x83\xf9\xca\xd3\x34\xa1\x5a\xfa\x0b\x08\x45\x93\x34\x4d\xca\x7b\x42\xd1\xdb\x75\xb0\x9e\xdc\xd7\x35\x68\x2d\x94\x7f\xa8\xee\xc5\xcc\xac\x2e\xbe\x0d\x57\xa6\x08\x26\x08\xee\xb4\xf8\x62\x61\xcb\x19\x86\x3c\xa5\x66\xa5\x2e\xc0\x19\x4f\x53\xc8\xd4\xe6\x7a\x21\xc9\x00\x84\x6a\x26\x21\xe7\x80\xea\x26\x7e\xbb\xba\x0e\x5a\x83\xb5\xb4\x4e\x19\x0d\x72\xba\x1e\x85\x3a\xa5\xdb\x6d\x63\x6c\x4a\x1f\x2c\xd1\x8b\xf8\x5a\x7a\x65\xb4\x43\xad\x21\x51\x73\x22\x9f\xa2\x5e\xa8\x1a\xa1\xcc\x44\x15\x81\x26\x3c\xba\x04\xf4\x2d\x54\x8f\x19\x19\xac\xa3\x67\x30\xbd\x32\xda\xf9\x5c\x7b\xf1\x39\x2f\x51\xb9\x31\xc0\x08\x8f\x84\x22\x52\x7a\xa0\xb0\xcb\x60\x4c\x06\x6b\x71\x63\x2a\x3b\x93\xbb\x90\x51\x49\xea\xa2\x05\xa2\xf9\x02\xe3\x83\xff\xa1\xe9\xfe\xb9\x0c\x03\xd1\xa4\x1c\x87\xe1\xd3\xed\xed\xe4\x26\xd4\x99\x38\x6f\xab\x99\xdf\x06\x6f\xef\xf7\xf5\x17\x51\x1c\x8e\xf3\xa2\xb0\x21\xb6\xf3\x56\xe9\x45\x38\x2b\x95\x5e\xdc\x4d\xaf\x3b\x67\x7e\xe9\x22\xc6\xf7\x7e\xe9\xa0\x0a\x73\xb5\x80\xcf\x20\x6c\x3a\x47\xca\x7b\xd1\xc3\x83\xc1\xce\xc0\x1b\x5b\x46\xe6\x95\x9e\xb1\xf7\x27\xf4\x78\x9a\x82\x4e\xdf\xd5\xcf\x45\x61\xa5\x73\x2c\x24\x15\xc1\xf3\x33\x02\xc6\x02\x59\xe9\x2b\x8b\xd1\x9d\x5d\x93\x93\x08\xd0\x26\x24\x6f\xd7\x22\x04\x1c\x87\x62\x86\xf3\x1a\xd2\x3d\x8e\x71\xa2\xf4\x82\x55\x56\x7d\x57\x7c\x4d\x47\xc7\xa4\xb2\xea\x35\x84\xb7\xbf\xdd\xc4\xfe\x32\x68\x7a\xab\xdf\xdf\x07\x2b\x04\x1d\xc3\xbc\xbd\x86\x13\xf7\x03\x6b\xa6\xef\xe5\xe1\x3b\x0f\x78\xf2\x56\xd4\x49\x02\x78\x9b\xf0\xe3\xe6\x1a\xa4\xc9\x1e\xf4\x17\xb9\x39\xe1\x04\x36\x90\x23\x42\xf4\x71\x1f\xc2\xe3\x27\xc1\x60\x05\xe3\xed\x86\x5d\xf5\xe3\x09\x65\xc0\x0d\x83\x7a\x49\xe8\xe5\x87\xd1\x87\x11\xcd\x00\x70\x32\x37\x96\xfc\x95\x11\x5c\xa3\x71\xf9\x05\x78\xa0\x6f\x4a\xcf\x1c\xde\x3d\x50\x7e\x08\x92\xcb\x31\xf9\xe3\xcf\xde\x5a\xf9\x5a\xfa\x7d\x43\x5b\x52\xc0\xc1\x02\xd3\x35\x40\x59\x0f\x25\xa7\x3c\x3b\x66\xdb\x5c\x6c\xfc\x04\xf8\xa8\x18\x57\xa5\x9a\xa3\xcf\x30\x3d\x3f\x8c\x89\x56\xcb\xd6\x58\x45\xb8\x63\x92\x97\xa5\xd4\x05\x0b\x9f\x59\xdb\xff\x7e\xe4\xf7\x6e\x38\x6f\x05\xe8\x64\x48\xc6\x9d\xbc\xe4\x26\x7a\x14\x42\xf0\x04\x37\x37\x92\xc7\x4a\xfa\x07\x53\x74\x78\xe9\x73\x38\x72\x87\xd4\x00\x0e\xf7\xda\xb4\x34\xce\xd3\x03\x6e\x18\x92\x01\xec\x0d\x10\xf7\x45\x18\x30\x52\x5a\x08\x18\xbd\x75\x78\x90\xb4\xfe\x5a\x8c\x15\x8d\x0e\x59\x11\x10\x71\xda\xb3\x7b\x91\x1e\xd1\x4b\x9b\x20\x8f\x1a\xf7\xe9\x32\x22\xa5\x27\x74\xdb\xe5\x79\x89\x3c\x0f\x6d\xda\x54\x7a\x3a\x7e\x65\xd5\xc9\xe0\x50\xf5\xff\x1a\x75\x4f\xdb\xaf\x59\x1c\x3b\xeb\x8c\x9f\x98\x9a\xca\x4b\xd6\x71\xd4\x9a\xc7\x38\x60\x0c\xde\x76\xfb\xaa\xd5\x75\xfb\x66\xc5\x30\x58\x00\xc8\x8e\xf6\xfb\xdc\xf2\x38\xc9\xbd\x97\x56\x33\x78\xdd\x89\xbb\xe9\xf5\x47\x63\x57\xb9\x0f\x11\xf0\x45\x53\xd7\x34\xdb\xbd\x26\xbb\x6f\x53\x14\x74\xef\x39\x1e\xe2\x88\xe2\x19\xef\x21\x1c\x12\xb9\x74\xfd\x7a\x1f\x81\x06\xde\x2a\xab\x8e\xa5\x79\xac\xee\x2d\x0f\x9f\x72\x5d\x2c\xa5\x65\xe1\x09\x8e\x1f\x1f\x03\x03\x44\xf9\x21\xcc\x36\x4a\xbe\x7f\xa7\xd5\xbb\x45\xb4\x94\xba\xb1\x45\xda\xe5\xb0\x91\x46\x6d\x9a\x7b\x43\x3b\x9b\x0c\x0f\x5c\x66\xff\x36\x1f\x70\xd0\xcf\xa1\xc6\x97\x1c\x52\xa0\xdb\xbd\xd9\xce\x5b\x65\x81\xeb\xce\xe1\xcc\x83\x62\xb2\x8d\x0d\xd8\xc5\x54\xba\xd2\x68\x27\x7f\xb7\xca\x4b\x9b\x11\x2b\x9f\xe2\x8b\x55\x4c\xe5\x53\x25\x9d\x0f\x7c\xab\xc2\x66\xd3\x72\xc3\x22\xd7\xa3\x2f\x54\xb9\x7d\x2e\xa1\x3f\x69\x22\x6d\x20\xc1\x30\xae\x93\x5f\x50\xca\xac\x7c\xca\x88\xd2\x3c\x4d\x60\xf0\xad\xdd\xd3\x44\x92\xec\x54\x23\x0a\xb6\xb1\x19\xc8\x32\x32\x5f\x79\xf1\xab\xb5\xc6\xce\x19\x7d\xe7\x2e\xc9\xbb\x0d\x0d\xe0\x9a\x98\x77\xd3\xeb\x0c\x9c\x71\x9e\x26\xf8\x7e\x08\x04\x69\x2a\x1f\xce\x01\x47\xeb\x91\xd0\x9b\x26\x86\x91\xaf\x8c\xf6\xf2\x1b\x82\xd4\x6a\xc9\x23\x54\x1c\xa9\x0e\xda\xa6\x71\xff\x2b\xe6\x30\x03\xe9\xd1\x3a\x84\x54\x00\x52\x0a\x3f\x3e\x9a\xcd\x74\x76\xcb\x61\xde\xde\xd8\xe6\xf8\xf3\x50\xdc\x42\x41\x68\x69\xf4\x82\x72\xd1\x81\x84\x0a\x37\x3e\xf7\x95\xbb\x32\x85\x64\x3f\x8d\x46\x9c\xc7\x79\x6d\xee\x7b\x0b\xeb\x3f\x01\x00\x00\xff\xff\x76\x39\xf2\x5b\x69\x0f\x00\x00")

func httpHttpServerGogoBytes() ([]byte, error) {
	return bindataRead(
		_httpHttpServerGogo,
		"http/http.server.gogo",
	)
}

func httpHttpServerGogo() (*asset, error) {
	bytes, err := httpHttpServerGogoBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "http/http.server.gogo", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _serviceServiceGogo = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\x51\xcd\x6a\xf3\x30\x10\x3c\x67\x9f\x62\x11\xe1\xc3\x0e\x89\x1f\xe0\x83\xef\xf4\xd1\x43\x0f\x0d\xa1\xed\x0b\xf8\x67\x9d\xba\x8d\x64\x45\x92\xd3\x84\x65\xdf\xbd\x48\x56\x29\x0d\xf8\x62\xb3\x33\xe3\x9d\x99\x35\x73\x47\xfd\x60\x08\x95\x27\x77\x19\x5a\x52\xb8\x13\x61\xde\xe1\x7a\x6c\xde\xf1\xef\x3f\xac\x22\x00\xb6\x6e\x3f\xea\x23\x21\x73\xc4\xab\xc3\x3c\x56\xfb\x5a\x93\x08\xc0\xa0\xed\xe8\x02\x16\x80\x88\xa8\xda\xd1\x04\xba\x06\x05\x2b\xd5\xeb\xa0\x12\x98\x1e\xb6\x41\x95\x37\x3c\xa6\x2f\x0e\x8d\x88\x82\x12\x20\x3a\xba\xda\x1c\x09\xd7\x39\x48\xf4\x4e\xca\x97\x79\xf6\x22\x10\x6e\x36\x45\xc8\x92\x6c\x9f\x05\xe8\x83\x9b\xda\xc0\x20\x00\xfd\x64\x5a\xdc\xd3\xe7\x92\xb6\x28\x71\xb3\xb8\x87\x53\x56\x47\x61\x72\x06\xff\x2c\xc9\x58\xa2\x11\x73\x4e\xad\x29\xbc\x8d\x5d\x0a\xfd\x2d\x7f\x4a\x90\x4f\xf7\x4b\x81\x0a\x7f\x69\x97\x7d\xcb\xd8\x6c\x5e\x93\x89\xa2\x0d\x57\xcc\xc7\xac\xfe\xcf\xef\x2d\x3a\x3a\xe3\xc6\x36\xd5\x8f\xfa\x99\xce\x13\xf9\xf0\x7a\xb3\x24\x52\x62\x71\xcf\xc6\x22\x7e\x66\xb7\x48\xce\x8d\xae\x44\x86\x55\x6e\x68\x86\xd3\x16\x7b\x1d\xaa\x87\xc8\xf4\x85\xba\x8f\x81\x93\x19\xb4\x3d\x91\x26\x13\xa8\x53\x25\x08\x30\x93\xe9\x52\xb1\xf4\xe7\xc8\x74\xf2\x0b\xfc\x0a\x00\x00\xff\xff\x09\x27\x3a\xff\x57\x02\x00\x00")

func serviceServiceGogoBytes() ([]byte, error) {
	return bindataRead(
		_serviceServiceGogo,
		"service/service.gogo",
	)
}

func serviceServiceGogo() (*asset, error) {
	bytes, err := serviceServiceGogoBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "service/service.gogo", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"grpc/grpc.client.gogo": grpcGrpcClientGogo,
	"grpc/grpc.server.gogo": grpcGrpcServerGogo,
	"http/http.client.gogo": httpHttpClientGogo,
	"http/http.server.gogo": httpHttpServerGogo,
	"service/service.gogo": serviceServiceGogo,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"grpc": &bintree{nil, map[string]*bintree{
		"grpc.client.gogo": &bintree{grpcGrpcClientGogo, map[string]*bintree{}},
		"grpc.server.gogo": &bintree{grpcGrpcServerGogo, map[string]*bintree{}},
	}},
	"http": &bintree{nil, map[string]*bintree{
		"http.client.gogo": &bintree{httpHttpClientGogo, map[string]*bintree{}},
		"http.server.gogo": &bintree{httpHttpServerGogo, map[string]*bintree{}},
	}},
	"service": &bintree{nil, map[string]*bintree{
		"service.gogo": &bintree{serviceServiceGogo, map[string]*bintree{}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

