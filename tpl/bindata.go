// Code generated by go-bindata.
// sources:
// tpl/grpc/grpc.client.gogo
// tpl/grpc/grpc.server.gogo
// tpl/http/http.client.gogo
// tpl/http/http.server.gogo
// tpl/service/service.gogo
// DO NOT EDIT!

package tpl

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _grpcGrpcClientGogo = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x55\x41\x6b\xdc\x3c\x10\x3d\x5b\xbf\x62\x3e\x91\x7c\x48\xc1\x51\x72\x0c\x0b\x3e\x94\x14\x4a\x4a\x48\x03\xbb\xd0\x43\x08\xc5\x2b\xcb\xae\x5a\xaf\x24\x24\x6d\x43\x30\xfe\xef\x65\x24\x27\xd9\x24\xbb\x26\x97\xee\xc1\xb6\xe4\x99\x37\xef\x3d\x8f\x66\x87\xa1\x51\xad\x36\x0a\x68\xe7\x9d\x14\xb2\xd7\xca\x44\x0a\xa7\xe3\x38\x0c\xa7\x70\x64\xd7\xbf\x60\x51\x81\xc0\x0d\xe2\x6a\xf9\xbb\xee\x14\x0c\x03\xee\x8b\xdb\xbc\x14\x37\xf5\x46\x8d\x23\x21\x7a\xe3\xac\x8f\xc0\x08\x00\x00\x95\xfe\xd1\x45\x7b\x16\xfb\x40\x49\x41\xdb\x4d\xc4\x5b\x88\x5e\x9b\x2e\x50\x42\x0a\xb7\x06\x3a\x01\x5d\xa5\xc4\xdb\xf5\x38\x62\x4c\x67\x6d\xd7\x2b\xd1\xd9\xbe\x36\x9d\xb0\xbe\x3b\x43\x66\x87\xdf\x9c\x49\xaf\x1a\x65\xa2\xae\xb1\x14\x27\x04\x89\xfb\xda\x74\x0a\x8e\x82\xf2\x7f\xb4\x54\x28\x21\x55\x5a\xe6\x75\x18\x47\xd2\x6e\x8d\x44\x25\x53\xc8\xa4\xe2\x8b\x77\x12\x9f\x18\x87\xcc\x15\x86\x24\xc7\xab\xb8\xf5\x66\xda\x0b\xe2\xab\xd5\x86\xdd\xdd\xe7\xe5\xf0\xb4\xbb\xb2\xd7\xf6\x41\x79\x46\xf7\x1a\x44\x79\x09\xfb\x22\x5f\x13\xa0\x7c\x2c\x81\x9e\x52\x4e\xe6\x28\xde\x5a\x1f\x19\x07\x6d\xe2\x6b\x7e\x17\xe7\x17\xe7\xb3\x89\x9f\x9a\xc6\x1f\xd0\xd6\x6e\xa2\x58\x3a\xaf\x4d\x6c\x19\x3d\x0e\x8b\xe3\x86\x96\x73\x06\x1d\x78\x99\xa9\x21\x7d\x12\x1f\x9d\xda\x1f\x74\x99\xda\x0c\x69\x6c\x65\xcc\x2c\xea\xa6\xf1\x13\xaf\xb4\x8e\x7d\x00\x38\x89\x7d\x10\x97\xd6\xb4\x3a\x6f\xba\xb5\x78\x87\x97\xb1\x3e\x52\xef\x9b\x8b\xda\x1a\x40\x77\xd8\xc9\x4c\x1c\x27\xd9\x41\x34\x4b\x85\xc0\x76\xa8\xf1\x0f\xe0\xbf\x76\x15\x8b\x49\x98\x2d\x97\x13\xf0\x27\x45\xaa\x55\x25\x37\xd2\xee\x88\xc2\x12\x9b\xd5\xf5\x32\x3b\xc1\xd0\x9a\x1d\x67\xfe\x39\x27\xac\x57\xe1\x07\x79\xc3\xe8\x46\x3d\xcc\x40\x30\xeb\x62\x00\x21\xde\x7f\xb1\xb7\xec\x38\xcc\x7e\x8e\x12\x94\xf7\xd6\xf3\x49\x84\xc4\xd3\xfc\xff\x4c\xfc\x0b\x75\x74\x71\x31\x77\x10\xca\x49\x11\x5e\x5b\xeb\xe1\x47\x09\xd6\x45\x2c\x90\x07\x48\x92\xf0\x82\x67\x5d\x64\x92\x4f\x39\xe9\xd6\xa5\x88\x45\x05\x77\xf7\x69\x7e\x7e\xd6\x75\x9f\x45\x0d\x19\x55\xb7\x93\x81\xff\x55\x60\x74\xbf\x03\x96\x53\x2b\xa8\x9d\x53\xa6\x61\x69\x59\x42\x42\xf9\xae\xe3\xcf\x95\xaf\x4d\xc0\xb9\x78\xf9\x32\xde\xd8\xce\xa8\x13\x37\xea\x61\x75\xbd\x64\x09\x9d\xf3\x89\x15\xa8\x3e\xa8\x8f\x17\xb9\x32\x41\xc9\xad\x57\xec\x29\x1f\xaf\xd9\x65\x6b\x4c\x32\x1e\xc5\x3d\x4b\x63\xb9\x41\xcb\x8c\x2b\x84\xe0\xa4\xd0\x6d\x0a\x7b\xd6\x57\x14\x53\x9b\x19\xdd\x27\x04\x52\x64\x2b\xe4\xa1\xb3\x0b\x15\x1e\xec\x7d\xdd\x34\x75\x12\x92\xe1\xbb\x1d\x2c\x4b\x44\x27\x63\x9a\xf5\xca\x34\x23\x3e\x29\xd3\xe0\xdf\xd4\xdf\x00\x00\x00\xff\xff\xbb\xbc\x66\x86\xd2\x06\x00\x00")

func grpcGrpcClientGogoBytes() ([]byte, error) {
	return bindataRead(
		_grpcGrpcClientGogo,
		"grpc/grpc.client.gogo",
	)
}

func grpcGrpcClientGogo() (*asset, error) {
	bytes, err := grpcGrpcClientGogoBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "grpc/grpc.client.gogo", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _grpcGrpcServerGogo = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x95\x5d\x6b\xdb\x3c\x14\xc7\xaf\xad\x4f\x71\x1e\x53\x1e\xe4\x92\x2a\x65\x57\x25\xe0\x8b\x51\xc6\x28\x94\xac\x2c\x65\x37\x63\x0c\xc7\x3e\xd6\xbc\xd9\x92\x26\x29\x69\x8b\xf1\x77\x1f\x47\x56\x5a\x77\xa1\xc9\x36\xe8\x95\x2d\xe9\xe8\x7f\x7e\xe7\xcd\xee\xfb\x0a\xeb\x46\x21\xa4\xd2\x9a\x52\x38\xb4\x5b\xb4\x29\x9c\x0d\x43\xdf\x9f\xc1\x89\x5e\x7f\x87\x45\x0e\x82\x36\x98\x29\xca\x1f\x85\x44\xe8\x7b\xda\x17\x37\xe3\x52\x2c\x8b\x0e\x87\x81\xb1\xa6\x33\xda\x7a\xe0\x2c\x49\x4b\xad\x3c\xde\xfb\x94\x5e\xed\x83\xf1\x7a\xee\x5b\x47\xab\xba\x0b\x9b\x0a\x7d\xca\x58\x62\xd6\x90\x46\xb1\xab\x70\xf9\x66\x3d\x0c\x74\x2e\x1b\xff\x6d\xb3\x16\xa5\xee\xe6\xf7\x67\x9d\xae\xe6\xb2\xd5\x32\x1c\x68\x2d\x5b\x14\x52\xb7\x85\x92\x42\x5b\x39\x27\xec\x97\x4f\xe6\xa5\xc5\x0a\x95\x6f\x0a\xf2\x9f\x31\x46\x51\xd9\x42\x49\x84\x13\x8a\xb5\x29\x91\xe2\x0b\x08\xab\x71\xed\x86\x81\xf9\x07\x13\xc2\x8c\x26\x31\xc4\xf7\xd6\x94\xab\x90\x20\x70\xde\x6e\x4a\xdf\x33\x00\x80\xa2\xaa\xc2\x46\xa3\x24\x4b\x7c\xeb\x00\x4e\x7d\xeb\xc4\xa5\x56\x75\x23\x59\x22\xc7\x9c\xc2\x69\x48\xf0\x78\x9f\x25\x3b\xe7\x66\x2d\xf6\xfc\x44\x9b\x81\x1d\xe5\xf8\x60\x7c\xa3\x15\xd4\x1b\x55\xf2\xd3\x03\x76\x19\x63\x64\x03\x6f\xab\xca\xa2\x73\x7c\x82\x9c\xfd\x81\x7e\xcf\x12\x8b\x7e\x63\xa3\x27\xb7\x2d\xe1\xa0\x37\xba\x90\xb8\x6d\x29\x82\x9f\x3c\x64\x88\x25\x03\x45\x14\x30\x6e\xaf\x57\x63\x76\x38\xa5\x6b\x92\xad\x57\x85\x21\x5f\x39\xf8\xd6\x4d\x51\x62\xd1\xf9\xf1\x7a\xbc\x2a\xdb\xce\x7d\x0e\xf1\x6d\xca\xb8\xc4\xbb\x03\x22\x5c\x1b\xef\x40\x88\x7d\xee\xdf\xf1\xb2\x83\x30\xc4\x12\x5b\x75\x91\xc3\xff\x07\x2c\x09\x9a\x4a\xba\x80\x74\x71\x71\x7e\x71\x9e\xce\x88\x36\xa9\xb5\x85\xaf\x33\xd0\xc6\x93\xc0\x38\x64\x81\x8d\xec\xb5\xf1\xdc\xc5\x5e\x24\x63\x19\x4e\x16\x39\x7c\xfe\x32\x99\x8b\x91\xb3\x1f\x58\xd2\xd4\x30\x9a\x87\xb2\xfd\x97\x83\x6a\xda\x20\x34\x5e\xcc\xa1\x30\x06\x55\xc5\xc3\x72\x06\x41\xe3\xd2\x62\xe5\xf8\x64\xe2\xc5\x12\xef\x6e\xaf\x57\xfc\x49\x29\xcb\x82\x7b\x1a\xdb\xb8\xb9\x1b\xcf\x7c\xd4\x58\xe2\x5d\x4c\x6b\x50\x16\x42\x64\x49\x30\x8f\x75\x75\x8f\xb3\x19\x4a\xc3\x9d\xdd\x1e\x29\x71\x78\xf2\xd2\xdf\x43\xfc\x2a\x52\xaf\xd3\x33\x03\xb4\x56\x53\xde\x49\x9f\x02\xb6\xdb\xa7\x46\xc8\xe1\x31\xe4\x5d\x4b\x75\x5e\xbc\xa3\x1b\x35\x4f\xf7\x3c\x42\xd3\x99\x16\x3b\x0a\x5c\x2b\xb0\xf8\x73\xd3\x58\xac\xd2\x31\xd9\x66\x2d\x3e\xa2\x6c\x9c\x47\xfb\x42\x73\x53\x1c\xbb\x54\xcc\xa6\x20\x59\x80\x6b\xd5\x8c\x60\xa9\x5e\x0a\xbd\xb8\x26\x29\xc5\x53\x5f\x9a\x74\xb4\xa6\x76\xc8\x42\xd5\xc8\x6c\x52\xae\xc8\x8e\x36\x7c\x00\x58\x42\x1f\x72\xf1\x89\xbf\xc9\xc4\x95\xaa\x75\xab\x78\xf8\xef\xc4\xb4\x02\xdf\xc3\xcb\xc6\x81\x50\x12\x0a\x0f\xcf\x9d\xed\x2a\xf2\x44\x3e\x76\x11\x6f\x55\xf6\x37\x05\xba\x6c\xb5\x43\x1e\x66\xf1\x99\x96\xd7\x86\x67\xff\x42\x5c\x92\x60\x25\xd2\x40\x41\x3f\x1c\x54\xd5\x30\xb0\xbe\x47\x55\x85\x1f\x29\xfb\x15\x00\x00\xff\xff\x6a\xc5\x93\x59\x76\x07\x00\x00")

func grpcGrpcServerGogoBytes() ([]byte, error) {
	return bindataRead(
		_grpcGrpcServerGogo,
		"grpc/grpc.server.gogo",
	)
}

func grpcGrpcServerGogo() (*asset, error) {
	bytes, err := grpcGrpcServerGogoBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "grpc/grpc.server.gogo", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _httpHttpClientGogo = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x57\xdf\x6f\xdb\xb8\x0f\x7f\xb6\xff\x0a\x7e\x85\x6c\x90\x0b\xc7\xed\xe3\x90\x2f\xfc\xb0\x0d\x37\x6c\x43\xd7\x16\x4d\xee\x69\x18\x0e\xae\xa3\xb4\xbe\x26\x92\x2b\xc9\xfd\x01\xc3\xff\xfb\x81\x94\xec\x28\x69\xe2\x1d\x0e\xe8\x53\x2c\xea\x43\xf2\x23\x92\x22\x95\xb6\x5d\x8a\x55\x25\x05\xb0\x3b\x6b\xeb\xac\x5c\x57\x42\x5a\x06\xd3\xae\x6b\xdb\x29\x4c\xd4\xcd\xdf\x30\xcb\x21\x43\x41\x5c\x17\xe5\x7d\x71\x2b\xa0\x6d\x51\x9e\x5d\xb9\x65\x76\x51\x6c\x44\xd7\xc5\x71\xb5\xa9\x95\xb6\xc0\xe3\x88\x95\x4a\x5a\xf1\x6c\x19\x7e\xea\x97\xda\xaa\x53\xbb\x36\xb8\x5a\x6d\x48\x68\xac\xae\xe4\xad\x61\x71\x1c\xd5\x37\xc0\xbc\xc1\x6f\x64\xe0\xea\xa6\xeb\x10\x73\x5b\xd9\xbb\xe6\x26\x2b\xd5\xe6\xf4\x79\xba\x51\xcb\x53\x24\xe8\xf9\x8d\x6f\x9f\xde\xea\xba\x64\x71\x12\xc7\x78\x06\x5d\xc8\x5b\x01\x13\x23\xf4\x63\x55\x0a\x3c\x0d\x39\x9b\xbb\xb5\xe9\x3a\x42\x4d\x1e\x85\x36\x95\x92\xb8\xcf\x1e\xcf\x28\x02\x71\xdb\xf6\xca\xaa\xb6\xa4\xe9\xad\x64\x97\xb5\xad\x94\x34\x1e\x35\x85\x6a\x05\xe2\xc1\xe1\x28\x1e\xc0\xb8\x72\x90\xcc\xab\x24\xce\x24\x00\x40\xc0\xea\x3e\x85\xc9\xa3\xb3\x8c\xaa\x9f\x95\x34\xb6\x90\x36\xfb\x51\xd4\x1e\xdc\x2b\x78\x0f\xf7\xc0\x3c\x53\xb6\x07\x18\x4e\x90\xc3\xe4\x31\x9b\xab\x46\x97\x62\x70\xe9\x40\x42\x2e\x03\x12\xfd\x0a\x95\xf7\xbe\x31\x9d\xab\x46\x96\x98\xea\xfe\xc8\x2e\xcd\x5f\x17\x8b\x2b\xfc\xe2\x09\xb8\x24\x42\x4b\xe6\xb4\xb0\x8d\x96\x5e\x66\xb2\xef\xaa\x92\xfc\xe7\x2f\xb7\x6c\x7b\xe9\x42\x9d\xab\x27\xa1\x39\x3b\x58\x41\x2c\x49\xe1\x10\x72\x97\x00\x4b\xba\x14\xd8\x94\x25\x71\x37\x42\xf1\x4a\x69\xcb\x13\xa8\xa4\xdd\xe5\xf7\xe1\xec\xc3\xd9\xa8\xe2\xc7\xe5\x52\x1f\x39\xdb\x6a\x63\xb3\x79\xad\x2b\x69\x57\x9c\xbd\x33\xb3\x77\x4b\x96\x8e\x05\xe8\xc8\xa6\xa3\x86\xf4\x63\xfb\x52\x0b\x58\xa8\x7b\x21\xbf\x20\x21\x64\x35\xf8\xf6\xbb\x07\x4d\x7c\xa6\x32\x47\x60\x53\xe2\x01\xa3\x62\xb9\xd4\x3e\xcb\x5e\x3b\x32\xe5\x9d\xd8\x88\x1d\x91\x5d\x1b\x88\x00\xe0\xc4\xae\x0d\x96\xda\xaa\x42\xe1\xe0\x7e\xcb\x24\x8e\xdc\x45\x22\xed\x93\xed\xc5\xca\x9c\xe3\x81\xfa\x08\xb9\xcb\xda\xba\xf3\x9c\x8c\x80\x12\x5f\x65\x8b\xf3\xb9\xa3\xc3\x91\x62\x40\x2f\xf9\x9d\x8b\x36\x8e\xfa\xec\xa0\xb3\x12\x46\xdd\x21\x3c\x2a\x33\x74\x92\x83\x5d\x9b\x38\xea\xe2\xbe\xd2\xe7\x14\x2f\xee\xc3\xe6\x42\xf6\x36\xee\xbd\x8b\x1c\xdc\x47\x48\x02\xab\x4f\x18\xc3\x29\x9f\x6f\xc9\x81\x1c\xe4\x80\x3f\xa1\xff\x4f\xa2\xd0\x42\x7f\x6c\xec\x1d\xa7\xba\xd8\x96\xc4\x1b\x65\x62\x28\xbe\x1c\xe8\x3b\x24\xe3\xa0\xdc\x97\xe2\xeb\x32\x7c\x1b\x4a\xde\x5d\x0e\xee\x23\x24\x74\x21\x9e\x46\x0c\x60\xc3\x37\x90\x65\xd9\x38\xab\x64\x94\x05\x92\x28\x71\x1e\xbc\x1f\x01\x21\x51\x57\x3b\x33\x37\xb6\x59\x0a\x71\x44\x4d\x60\x36\xd6\xd5\x52\x3c\x4c\xb4\x52\x1a\xfe\x4a\xc1\x4f\x34\x37\x87\x88\x3a\x9a\x55\xb5\xe5\x65\x42\xb8\x6a\x05\xee\xaa\xfc\x2f\x07\x59\xad\xf7\x8b\x97\x1c\xe3\x4c\xef\xa1\x7d\xe0\x42\xf4\x10\xcc\x20\x79\x17\xe2\x89\x07\xcb\xed\xdd\x27\x6f\x89\x73\xee\xf3\x56\x62\xec\x87\x29\xbc\x11\xf6\x4e\x2d\x77\xe6\xf0\x0f\x12\x99\x60\xb0\x4e\xd0\xf6\x16\xc9\x6a\x65\xec\xee\xe8\x9d\x34\xba\xa2\xad\x83\x13\xd9\x8d\x6d\x72\xe2\xac\xec\xcc\xfa\x03\x13\xd9\x29\xec\x4f\x7d\x64\x11\x8c\xfc\x50\xef\xd5\xe8\xf7\x16\xc2\xe1\xff\x4a\xf1\xf5\x33\xc0\xb1\x63\x47\x70\x61\x18\x8e\x3d\x08\x42\x7c\xf8\x34\x38\xee\xb3\xd1\xd5\x51\x87\x18\xd5\xff\xea\x69\xfb\xec\x38\x86\x0c\xd7\x74\x19\x7f\x7f\x9d\xdb\x3e\x81\x6e\x8f\x97\xf6\x19\xfc\xc3\x14\x63\x8d\xbf\x29\x54\x12\x4e\xea\x9b\x6c\x0b\xbe\x16\x0f\x8d\x30\x76\xf1\x52\x8b\xae\x4b\x80\xef\xef\x62\x5d\x1a\xb7\x9b\x82\xd0\x5a\x69\xea\x1c\x74\x83\x66\x39\xfc\xfc\x15\xd4\xf6\xb5\x78\xb8\xac\xe9\xba\x06\x42\x57\xb2\xf4\xb2\xd9\xe6\x88\x5e\x3f\xbb\xb8\x3f\xaf\xcf\x79\x1c\xed\x88\xfc\x8c\xea\x6f\x21\x69\x84\xfb\x5f\x95\xb1\xdc\x35\x77\xb7\xd7\xb6\x3e\x77\x98\x1c\x5f\xef\xd1\x9e\x97\x6f\x1c\x9f\xcb\xf8\xf1\x45\xe9\x4d\x61\x89\x99\x7f\x4b\x76\x1d\x4b\xe1\xc8\x6b\xcd\x6d\xec\x3d\xce\x9c\x70\x27\xee\x2c\xe9\xb9\x4c\x41\xac\x8d\x38\x42\x02\xf5\x1a\x5d\xf5\x81\x88\xb6\x25\x11\x45\xfb\xa1\xa1\xec\x49\xbb\x1f\x9e\xab\x4f\xdf\xe7\x97\x17\xbc\x92\x84\xf7\xed\xce\xb5\xb1\x61\xce\x04\xcd\x8c\x52\x96\x43\x51\xd7\x42\x2e\xa9\x7b\xa7\x61\x9f\xda\xce\x42\x54\xdc\x69\x59\xbd\x35\x1e\x58\x4e\x86\xce\xf5\x40\x75\x81\xc5\x10\x66\xbd\xb8\x17\xbe\xb4\xc8\x55\x96\x65\x09\x91\x43\x68\x40\xca\x37\x3e\x59\xad\xc9\x0a\x99\x54\x0d\xb5\xea\xf7\xc7\x2b\xb1\xed\x06\x5b\xb3\x7c\xe8\xc5\xd9\x1f\xcf\xa2\x6c\xac\xc0\xca\x4f\x81\x88\x51\xaa\x5d\x9c\xae\x85\xa9\x95\x34\x82\xab\xc6\x26\xc9\xff\xff\x0d\x11\x2f\x53\x8d\x4d\x71\x23\xc6\xff\x0b\xfd\xa5\x0c\xfe\x3a\x04\xc2\xf8\x9f\x00\x00\x00\xff\xff\x1d\xae\xce\xb5\x60\x0e\x00\x00")

func httpHttpClientGogoBytes() ([]byte, error) {
	return bindataRead(
		_httpHttpClientGogo,
		"http/http.client.gogo",
	)
}

func httpHttpClientGogo() (*asset, error) {
	bytes, err := httpHttpClientGogoBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "http/http.client.gogo", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _httpHttpServerGogo = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xbc\x57\x5f\x6f\xdb\x36\x10\x7f\x96\x3e\x05\x47\xb8\x03\x19\xc8\x8c\xb1\xa7\x22\x80\x1f\xb6\x60\x45\x03\xac\xad\xe1\x24\xd8\xc3\x30\x0c\x8a\x45\x3b\x5c\x6c\x52\x21\x29\xbb\x81\xa1\xef\x3e\x1c\x79\xb2\x65\xc9\xf1\x9c\xad\x68\x9e\xa2\xfb\xfb\xbb\x3f\xbc\x3b\x6f\xb7\x85\x9c\x2b\x2d\x09\x7d\xf4\xbe\x14\x4e\xda\xb5\xb4\x94\x0c\xeb\x7a\xbb\x1d\x92\x81\x79\xf8\x9b\x5c\x8d\x89\x00\x42\x5a\xe6\xb3\xa7\x7c\x21\xc9\x76\x0b\x74\x31\x89\x9f\xe2\x73\xbe\x92\x75\x9d\xa6\x6a\x55\x1a\xeb\x09\x4b\x09\x21\x84\xce\xec\x4b\xe9\xcd\xa5\x5f\x3a\x1a\x09\xf3\x95\xa7\x69\x42\xb5\xf4\x97\xe0\x8a\x26\x69\x9a\x94\x0f\x84\xa2\xb5\x9b\xa0\x3d\x79\xa8\x6b\x90\x5a\x28\xff\x58\x3d\x88\x99\x59\x5d\x7e\x1d\xae\x4c\x11\x54\x10\xdc\x69\xf6\xe5\xc2\x96\x33\x74\x79\x4a\xcc\x4a\x5d\x80\x31\x9e\xa6\x10\xa9\xcd\xf5\x42\x92\x01\x30\xd5\x4c\x42\xcc\x01\xd5\x6d\xfc\x76\x75\x1d\xa4\x06\x6b\x69\x9d\x32\x1a\xf8\x74\x3d\x0a\x79\x4a\xb7\xdb\x46\xd9\x94\x3e\x68\xa2\x15\xf1\xa5\xf4\xca\x68\x87\x52\x43\xa2\xe6\x44\x3e\x47\xb9\x90\x35\x42\x99\x89\x22\x02\x55\x78\x34\x09\xe8\x5b\xa8\x9e\x32\x32\x58\x47\xcb\xa0\x7a\x6d\xb4\xf3\xb9\xf6\xe2\x53\x5e\xa2\x70\xa3\x80\x1e\x9e\x08\x45\xa4\xb4\x23\xb0\x8b\x60\x4c\x06\x6b\x71\x6b\x2a\x3b\x93\x3b\x97\x51\x48\xea\xa2\x05\xa2\xf9\x02\xe5\xce\xff\x50\x74\xff\x52\x86\x86\x68\x42\x8e\xcd\xf0\xf1\xee\x6e\x72\x1b\xf2\x4c\x9c\xb7\xd5\xcc\x6f\x83\xb5\x8b\x7d\xfe\x45\x64\x07\x72\x5e\x14\x36\xf8\x76\xde\x2a\xbd\x08\xb4\x52\xe9\xc5\xfd\xf4\xe6\x80\xe6\x97\x2e\x62\xbc\xf0\x4b\x07\x59\x98\xab\x05\x7c\x06\x66\x53\x39\x52\x3e\x88\x1e\x1e\x74\x76\x06\xde\x58\x32\x32\xaf\xf4\x8c\x5d\x9c\x90\xe3\x69\x0a\x32\xe4\xe7\xa2\xb0\xd2\x39\x16\x62\x88\x58\xf9\x19\xf6\x63\x3e\xac\xf4\x95\x45\x67\xce\xae\xc9\x49\x87\xa8\x13\x62\xb5\x6b\x11\x1c\x8e\x43\xee\x02\xbd\x86\xe8\x02\xa4\x89\xd2\x0b\x56\x59\xf5\x5d\xe1\x34\xf5\x1a\x93\xca\xaa\x0e\xa0\xbb\xdf\x6e\x63\xb1\x18\x54\xb0\x55\xbc\xef\x03\x0d\x9c\x8e\xa1\x79\x3a\xb0\xf0\x6d\xb3\xa6\x73\x5e\x6f\x9c\xf3\x70\x26\x6f\x05\x99\x24\x00\xaf\x71\x3f\x6e\x5a\x38\x4d\xf6\x18\x3f\xcb\xcd\x09\x23\x30\x3d\x1c\x11\xa2\x8f\xbb\x0b\x8f\x9f\x04\x83\x09\x8b\x2f\x13\xe6\xcc\x8f\x27\x84\x01\x37\x74\xdd\x15\xa1\x57\xef\x47\xef\x47\x34\x03\xc0\xc9\xdc\x58\xf2\x57\x46\x70\x04\xc6\xc1\x15\xe0\x81\xbc\x29\x3d\x73\xf8\x6e\x40\xf8\x31\x70\xae\xc6\xe4\x8f\x3f\x7b\x23\xe1\x4b\xe9\xf7\xf5\x6b\x71\x01\x07\x0b\x5b\xaa\x01\xca\x7a\x28\x39\xe5\xd9\x31\xdd\xe6\x95\xe2\x27\xc0\x47\xc1\x38\xe6\xd4\x1c\x6d\x86\x66\xf9\x61\x4c\xb4\x5a\xb6\xba\x28\xc2\x1d\x93\xbc\x2c\xa5\x2e\x58\xf8\xcc\xda\xf6\xf7\x1d\xbe\x37\xc3\x79\xcb\xc1\x41\x84\x64\x7c\x10\x97\xdc\x44\x8b\x42\x08\x9e\xe0\xd4\xc5\xc1\xbf\x92\xfe\xd1\x14\x07\x3b\xe5\x53\x20\xb9\xee\x58\x07\x83\x7b\x69\x5a\x1a\xe7\x69\x67\xae\x0f\xc9\x00\xa6\x02\xb0\xfb\x2c\x74\x18\xd7\x51\x70\x18\xad\x1d\xec\x30\xd2\xfa\x6b\x6d\x9b\xa8\xd4\xdd\x68\x80\x88\xd3\x9e\xde\xab\xab\x0d\xad\xb4\x97\xdb\x51\xe5\xfe\xaa\x8b\x48\xe9\x09\xd9\x76\x7a\x5e\x5b\x7c\x5d\x9d\xf6\x1a\x3c\xed\xbf\xb2\xea\xa4\x73\xc8\xfa\xff\xf5\xba\x5f\xb9\xff\xa6\x71\x8c\x76\xd0\x7e\x62\x6a\x2a\x2f\xd9\x81\xa1\x56\x3f\xc6\x06\x63\x70\x97\xed\xb3\x56\xd7\xed\x97\x15\xdd\x60\x02\x20\x3a\xda\xaf\x73\xcb\xe2\x24\xf7\x5e\x5a\xcd\xe0\x32\x13\xf7\xd3\x9b\x0f\xc6\xae\x72\x1f\x3c\xe0\x35\x52\xd7\x34\xdb\x5d\x82\x87\x77\x25\x32\x0e\xdf\x39\x12\xb1\x45\x91\xc6\x7b\x08\x87\x44\x2e\x5d\x3f\xdf\x47\xa0\x81\xb5\xca\xaa\x63\x61\x1e\xcb\x7b\xcb\xc2\xc7\x5c\x17\x4b\x69\x59\x38\x9f\xf1\xe3\x43\xd8\x00\x91\xdf\x85\xd9\x46\xc9\xf7\x37\x56\xbd\x1b\x44\x4b\xa9\x1b\x5d\x5c\xaa\x1c\x26\xd2\xa8\xbd\xd5\xde\x50\xce\x26\xc2\x8e\xc9\xec\xbf\xc6\x03\x06\xfa\x31\xd4\x78\x85\xe1\x0a\x74\xbb\x7b\xeb\xbc\x51\x16\x76\xdd\x39\x3b\xb3\x93\x4c\xb6\xb1\x01\xbb\x98\x4a\x57\x1a\xed\xe4\xef\x56\x79\x69\x33\x62\xe5\x73\xbc\x36\xc5\x54\x3e\x57\xd2\xf9\xb0\x6f\x55\x98\x6c\x5a\x6e\x58\xdc\xf5\x68\x0b\x45\xee\x5e\x4a\xa8\x4f\x9a\x48\x1b\x96\x60\x68\xd7\xc9\x2f\xc8\x65\x56\x3e\x67\x44\x69\x9e\x26\xd0\xf8\xd6\xee\xd7\x44\x92\xec\x44\x23\x0a\xb6\xb1\x19\xf0\x32\x32\x5f\x79\xf1\xab\xb5\xc6\xce\x19\x7d\xe7\xae\xc8\xbb\x0d\x0d\xe0\x1a\x9f\xf7\xd3\x9b\x0c\x8c\x71\x9e\x26\x78\x3f\x84\x05\x69\x2a\x1f\xe8\x80\xa3\x75\x24\xf4\xba\x89\xa1\xe7\x6b\xa3\xbd\xfc\x8a\x20\xb5\x5a\xf2\x08\x15\x5b\xea\x00\x6d\x53\xb8\x6f\x8a\x39\xf4\x40\x7a\x34\x0f\x21\x14\x80\x94\xc2\x0f\x87\x66\x32\x9d\x5d\x72\xe8\xb7\x37\x96\x39\xfe\xb4\x13\x77\x90\x10\x5a\x1a\xbd\xa0\x5c\x1c\x40\x42\x81\x5b\x9f\xfb\xca\x5d\x9b\x42\xb2\x9f\x46\x23\xce\x63\xbf\x36\xef\xbd\x85\xf5\x9f\x00\x00\x00\xff\xff\x9a\x44\xf9\x5f\x25\x0f\x00\x00")

func httpHttpServerGogoBytes() ([]byte, error) {
	return bindataRead(
		_httpHttpServerGogo,
		"http/http.server.gogo",
	)
}

func httpHttpServerGogo() (*asset, error) {
	bytes, err := httpHttpServerGogoBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "http/http.server.gogo", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _serviceServiceGogo = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\x51\xcd\x6a\xf3\x30\x10\x3c\x67\x9f\x62\x11\xe1\xc3\x0e\x89\x1f\xe0\x83\xef\xf4\xd1\x43\x0f\x0d\xa1\xed\x0b\xf8\x67\x9d\xba\x8d\x64\x45\x92\xd3\x84\x65\xdf\xbd\x48\x56\x29\x0d\xf8\x62\xb3\x33\xe3\x9d\x99\x35\x73\x47\xfd\x60\x08\x95\x27\x77\x19\x5a\x52\xb8\x13\x61\xde\xe1\x7a\x6c\xde\xf1\xef\x3f\xac\x22\x00\xb6\x6e\x3f\xea\x23\x21\x73\xc4\xab\xc3\x3c\x56\xfb\x5a\x93\x08\xc0\xa0\xed\xe8\x02\x16\x80\x88\xa8\xda\xd1\x04\xba\x06\x05\x2b\xd5\xeb\xa0\x12\x98\x1e\xb6\x41\x95\x37\x3c\xa6\x2f\x0e\x8d\x88\x82\x12\x20\x3a\xba\xda\x1c\x09\xd7\x39\x48\xf4\x4e\xca\x97\x79\xf6\x22\x10\x6e\x36\x45\xc8\x92\x6c\x9f\x05\xe8\x83\x9b\xda\xc0\x20\x00\xfd\x64\x5a\xdc\xd3\xe7\x92\xb6\x28\x71\xb3\xb8\x87\x53\x56\x47\x61\x72\x06\xff\x2c\xc9\x58\xa2\x11\x73\x4e\xad\x29\xbc\x8d\x5d\x0a\xfd\x2d\x7f\x4a\x90\x4f\xf7\x4b\x81\x0a\x7f\x69\x97\x7d\xcb\xd8\x6c\x5e\x93\x89\xa2\x0d\x57\xcc\xc7\xac\xfe\xcf\xef\x2d\x3a\x3a\xe3\xc6\x36\xd5\x8f\xfa\x99\xce\x13\xf9\xf0\x7a\xb3\x24\x52\x62\x71\xcf\xc6\x22\x7e\x66\xb7\x48\xce\x8d\xae\x44\x86\x55\x6e\x68\x86\xd3\x16\x7b\x1d\xaa\x87\xc8\xf4\x85\xba\x8f\x81\x93\x19\xb4\x3d\x91\x26\x13\xa8\x53\x25\x08\x30\x93\xe9\x52\xb1\xf4\xe7\xc8\x74\xf2\x0b\xfc\x0a\x00\x00\xff\xff\x09\x27\x3a\xff\x57\x02\x00\x00")

func serviceServiceGogoBytes() ([]byte, error) {
	return bindataRead(
		_serviceServiceGogo,
		"service/service.gogo",
	)
}

func serviceServiceGogo() (*asset, error) {
	bytes, err := serviceServiceGogoBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "service/service.gogo", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"grpc/grpc.client.gogo": grpcGrpcClientGogo,
	"grpc/grpc.server.gogo": grpcGrpcServerGogo,
	"http/http.client.gogo": httpHttpClientGogo,
	"http/http.server.gogo": httpHttpServerGogo,
	"service/service.gogo": serviceServiceGogo,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"grpc": &bintree{nil, map[string]*bintree{
		"grpc.client.gogo": &bintree{grpcGrpcClientGogo, map[string]*bintree{}},
		"grpc.server.gogo": &bintree{grpcGrpcServerGogo, map[string]*bintree{}},
	}},
	"http": &bintree{nil, map[string]*bintree{
		"http.client.gogo": &bintree{httpHttpClientGogo, map[string]*bintree{}},
		"http.server.gogo": &bintree{httpHttpServerGogo, map[string]*bintree{}},
	}},
	"service": &bintree{nil, map[string]*bintree{
		"service.gogo": &bintree{serviceServiceGogo, map[string]*bintree{}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

